{"version":3,"sources":["../../mail/timer.js"],"names":["schedule","require","Models","mailer","env_var","scheduler","scheduleJob","console","log","Date","now","User","findAll","then","users","forEach","data","Sondage","sondage","sondage_id","next_sondage","dataValues","id","token","generateJwt","diff","lastMailDate","mailIntensity","lastName","update","where","module","exports"],"mappings":";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,eAAD,CAAxB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,oBAAD,CAAtB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,cAAD,CAAvB;;AAEA,IAAMI,SAAS,GAAG,SAAZA,SAAY,GAAY;AAC5BL,EAAAA,QAAQ,CAACM,WAAT,CAAqB,aAArB,EAAoC,YAAM;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCC,IAAI,CAACC,GAAL,EAAxC;AAEAR,IAAAA,MAAM,CAACS,IAAP,CAAYC,OAAZ,GAAsBC,IAAtB,CAA2B,UAACC,KAAD,EAAW;AACpCA,MAAAA,KAAK,CAACC,OAAN,CAAc,UAACC,IAAD,EAAU;AACtBd,QAAAA,MAAM,CAACe,OAAP,CAAeL,OAAf,GAAyBC,IAAzB,CAA8B,UAACK,OAAD,EAAa;AACzC,cAAMC,UAAU,GAAGD,OAAO,CAACd,OAAO,CAACgB,YAAT,CAAP,CAA8BC,UAA9B,CAAyCC,EAA5D;AACA,cAAMC,KAAK,GAAGP,IAAI,CAACQ,WAAL,CAAiBL,UAAjB,CAAd;AACA,cAAMM,IAAI,GAAGhB,IAAI,CAACC,GAAL,KAAaM,IAAI,CAACK,UAAL,CAAgBK,YAA1C;;AACA,cAAIV,IAAI,CAACK,UAAL,CAAgBM,aAAhB,GAAgCF,IAAI,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAJ,GAA+B,GAAnE,EAAwE;AACtElB,YAAAA,OAAO,CAACC,GAAR,4BAAgCQ,IAAI,CAACK,UAAL,CAAgBO,QAAhD;AACAzB,YAAAA,MAAM,CAACa,IAAI,CAACK,UAAN,EAAkBE,KAAlB,CAAN;AACArB,YAAAA,MAAM,CAACS,IAAP,CAAYkB,MAAZ,CACE;AAAEH,cAAAA,YAAY,EAAEjB,IAAI,CAACC,GAAL;AAAhB,aADF,EAEE;AAAEoB,cAAAA,KAAK,EAAE;AAAER,gBAAAA,EAAE,EAAEN,IAAI,CAACK,UAAL,CAAgBC;AAAtB;AAAT,aAFF;AAKD;AACF,SAbD;AAcD,OAfD;AAgBD,KAjBD;AAmBA;AACD,GAvBD;AAwBD,CAzBD;;AA0BAS,MAAM,CAACC,OAAP,GAAiB3B,SAAjB","sourcesContent":["const schedule = require('node-schedule');\nconst Models = require('../models/index.js');\nconst mailer = require('./mailer');\nconst env_var = require('../variables');\n\nconst scheduler = function () {\n  schedule.scheduleJob('0 * * * * *', () => {\n    console.log(\"Trying to send mail at: \", Date.now());\n\n    Models.User.findAll().then((users) => {\n      users.forEach((data) => {\n        Models.Sondage.findAll().then((sondage) => {\n          const sondage_id = sondage[env_var.next_sondage].dataValues.id;\n          const token = data.generateJwt(sondage_id);\n          const diff = Date.now() - data.dataValues.lastMailDate;\n          if (data.dataValues.mailIntensity < diff / (1000 * 60 * 60 * 24) + 0.4) {\n            console.log(`Sending mail to: ${data.dataValues.lastName}`);\n            mailer(data.dataValues, token);\n            Models.User.update(\n              { lastMailDate: Date.now() },\n              { where: { id: data.dataValues.id } },\n\n            );\n          }\n        });\n      });\n    });\n\n    /**/\n  });\n};\nmodule.exports = scheduler;\n"],"file":"timer.js"}