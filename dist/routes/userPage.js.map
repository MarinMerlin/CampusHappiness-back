{"version":3,"sources":["../../routes/userPage.js"],"names":["express","require","passport","router","Router","bodyParser","use","json","urlencoded","extended","morgan","Models","loginStrategy","serializeUser","user","done","deserializeUser","id","req","res","next","isAuthenticated","url","status","message","post","authenticate","session","send","console","log","dataValues","pseudo","login","JSON","stringify","serverResponse","success","email","get","destroy","User","findOne","where","then","firstName","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\nconst passport = require('passport');\n\nconst router = express.Router();\n\n\n// Le body Parser permet d'acceder aux variable envoyés dans le body\nconst bodyParser = require('body-parser');\n\nrouter.use(bodyParser.json());\nrouter.use(express.urlencoded({ extended: false }));\n\nconst morgan = require('morgan');\n\nrouter.use(morgan('dev'));\n\n// Récupère les models\nconst Models = require('../models/index');\n\n// Authentification\nconst loginStrategy = require('../passport-config/adminStrategy');\n\npassport.use(loginStrategy);\n\npassport.serializeUser((user, done) => {\n  done(null, user);\n});\n\npassport.deserializeUser(function (id, done) {\n  done(null, id);\n});\n\nrouter.use((req, res, next) => {\n  if (!req.isAuthenticated() && req.url !== '/login') {\n    res.status(401).json({ message: 'Unauthorized. User not logged in!' });\n  } else {\n    next();\n  }\n});\n\nrouter.post('/login',\n  passport.authenticate('local', { session: true }),\n  (req, res) => {\n    switch (req.user) {\n      case \"wrongUser\":\n        res.status(460).send(\"Wrong username\");\n        break;\n      case \"wrongPass\":\n        res.status(461).send(\"Wrong password\");\n        break;\n      default:\n        console.log(\"Correct authentification: \", req.user.dataValues.pseudo);\n        req.login(req.user, () => {\n          console.log('Inside req.login() callback');\n          console.log(`req.session.passport: ${JSON.stringify(req.session.passport)}`);\n          console.log(`req.user: ${JSON.stringify(req.user)}`);\n        });\n        const serverResponse = { \n          success: true, \n          user: { email: req.user.dataValues.email },\n        };\n        res.json(serverResponse);\n    }\n  });\n\n// --------- Routes protegées-------------\n\n// Logout the session\n\nrouter.get('/logout', (req, res) => {\n  req.session.destroy();\n  res.send(\"User logged out\");\n});\n\n// Get user\n\nrouter.get('/getUser', (req, res) => {\n  Models.User.findOne({ where: { id: req.user.id } }).then((user) => {\n    res.json(user.dataValues.firstName);\n  });\n});\n \nmodule.exports = router;"],"file":"userPage.js"}