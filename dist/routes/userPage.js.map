{"version":3,"sources":["../../routes/userPage.js"],"names":["express","require","router","Router","bodyParser","use","json","urlencoded","extended","morgan","Models","req","res","next","isAuthenticated","url","status","message","get","session","destroy","send","User","findOne","where","id","user","then","dataValues","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf,C,CAEA;;AACA,IAAMC,UAAU,GAAGH,OAAO,CAAC,aAAD,CAA1B;;AAEAC,MAAM,CAACG,GAAP,CAAWD,UAAU,CAACE,IAAX,EAAX;AACAJ,MAAM,CAACG,GAAP,CAAWL,OAAO,CAACO,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAX;;AAEA,IAAMC,MAAM,GAAGR,OAAO,CAAC,QAAD,CAAtB;;AAEAC,MAAM,CAACG,GAAP,CAAWI,MAAM,CAAC,KAAD,CAAjB,E,CAEA;;AACA,IAAMC,MAAM,GAAGT,OAAO,CAAC,iBAAD,CAAtB;;AAEAC,MAAM,CAACG,GAAP,CAAW,UAACM,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC7B,MAAI,CAACF,GAAG,CAACG,eAAJ,EAAD,IAA0BH,GAAG,CAACI,GAAJ,KAAY,QAA1C,EAAoD;AAClDH,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqB;AAAEW,MAAAA,OAAO,EAAE;AAAX,KAArB;AACD,GAFD,MAEO;AACLJ,IAAAA,IAAI;AACL;AACF,CAND,E,CAQA;AAEA;;AAEAX,MAAM,CAACgB,GAAP,CAAW,SAAX,EAAsB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAClCD,EAAAA,GAAG,CAACQ,OAAJ,CAAYC,OAAZ;AACAR,EAAAA,GAAG,CAACS,IAAJ,CAAS,iBAAT;AACD,CAHD,E,CAKA;;AAEAnB,MAAM,CAACgB,GAAP,CAAW,UAAX,EAAuB,UAACP,GAAD,EAAMC,GAAN,EAAc;AACnCF,EAAAA,MAAM,CAACY,IAAP,CAAYC,OAAZ,CAAoB;AAAEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,EAAE,EAAEd,GAAG,CAACe,IAAJ,CAASD;AAAf;AAAT,GAApB,EAAoDE,IAApD,CAAyD,UAACD,IAAD,EAAU;AACjEd,IAAAA,GAAG,CAACN,IAAJ,CAASoB,IAAI,CAACE,UAAd;AACD,GAFD;AAGD,CAJD;AAMAC,MAAM,CAACC,OAAP,GAAiB5B,MAAjB","sourcesContent":["const express = require('express');\n\nconst router = express.Router();\n\n// Le body Parser permet d'acceder aux variable envoyés dans le body\nconst bodyParser = require('body-parser');\n\nrouter.use(bodyParser.json());\nrouter.use(express.urlencoded({ extended: false }));\n\nconst morgan = require('morgan');\n\nrouter.use(morgan('dev'));\n\n// Récupère les models\nconst Models = require('../models/index');\n\nrouter.use((req, res, next) => {\n  if (!req.isAuthenticated() && req.url !== '/login') {\n    res.status(401).json({ message: 'Unauthorized. User not logged in!' });\n  } else {\n    next();\n  }\n});\n\n// --------- Routes protegées-------------\n\n// Logout the session\n\nrouter.get('/logout', (req, res) => {\n  req.session.destroy();\n  res.send(\"User logged out\");\n});\n\n// Get user\n\nrouter.get('/getUser', (req, res) => {\n  Models.User.findOne({ where: { id: req.user.id } }).then((user) => {\n    res.json(user.dataValues);\n  });\n});\n \nmodule.exports = router;"],"file":"userPage.js"}