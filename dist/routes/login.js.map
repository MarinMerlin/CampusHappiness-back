{"version":3,"sources":["../../routes/login.js"],"names":["express","require","passport","router","Router","bodyParser","use","json","urlencoded","extended","morgan","loginStrategy","serializeUser","user","done","deserializeUser","id","post","authenticate","session","req","res","status","send","login","err","console","log","serverResponse","success","admin","pseudo","dataValues","module","exports"],"mappings":";;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAME,MAAM,GAAGH,OAAO,CAACI,MAAR,EAAf,C,CAGA;;AACA,IAAMC,UAAU,GAAGJ,OAAO,CAAC,aAAD,CAA1B;;AAEAE,MAAM,CAACG,GAAP,CAAWD,UAAU,CAACE,IAAX,EAAX;AACAJ,MAAM,CAACG,GAAP,CAAWN,OAAO,CAACQ,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAX;;AAEA,IAAMC,MAAM,GAAGT,OAAO,CAAC,QAAD,CAAtB;;AAEAE,MAAM,CAACG,GAAP,CAAWI,MAAM,CAAC,KAAD,CAAjB,E,CAEA;;AACA,IAAMC,aAAa,GAAGV,OAAO,CAAC,kCAAD,CAA7B;;AAEAC,QAAQ,CAACI,GAAT,CAAaK,aAAb;AAEAT,QAAQ,CAACU,aAAT,CAAuB,UAACC,IAAD,EAAOC,IAAP,EAAgB;AACrCA,EAAAA,IAAI,CAAC,IAAD,EAAOD,IAAP,CAAJ;AACD,CAFD;AAIAX,QAAQ,CAACa,eAAT,CAAyB,UAAUC,EAAV,EAAcF,IAAd,EAAoB;AAC3CA,EAAAA,IAAI,CAAC,IAAD,EAAOE,EAAP,CAAJ;AACD,CAFD;AAIAb,MAAM,CAACc,IAAP,CAAY,GAAZ,EACEf,QAAQ,CAACgB,YAAT,CAAsB,OAAtB,EAA+B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA/B,CADF,EAEE,UAACC,GAAD,EAAMC,GAAN,EAAc;AACZ,UAAQD,GAAG,CAACP,IAAZ;AACE,SAAK,WAAL;AACEQ,MAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB;AACA;;AACF,SAAK,WAAL;AACEF,MAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB;AACA;;AACF;AACEH,MAAAA,GAAG,CAACI,KAAJ,CAAUJ,GAAG,CAACP,IAAd,EAAoB,UAACY,GAAD,EAAS;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,OAFD;AAGA,UAAMC,cAAc,GAAG;AACrBC,QAAAA,OAAO,EAAE,IADY;AAErBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAEX,GAAG,CAACP,IAAJ,CAASmB,UAAT,CAAoBD;AAA9B;AAFc,OAAvB;AAIAV,MAAAA,GAAG,CAACd,IAAJ,CAASqB,cAAT;AAfJ;AAiBD,CApBH;AAsBAK,MAAM,CAACC,OAAP,GAAiB/B,MAAjB","sourcesContent":["\nconst express = require('express');\nconst passport = require('passport');\n\nconst router = express.Router();\n\n\n// Le body Parser permet d'acceder aux variable envoyÃ©s dans le body\nconst bodyParser = require('body-parser');\n\nrouter.use(bodyParser.json());\nrouter.use(express.urlencoded({ extended: false }));\n\nconst morgan = require('morgan');\n\nrouter.use(morgan('dev'));\n\n// Authentification\nconst loginStrategy = require('../passport-config/adminStrategy');\n\npassport.use(loginStrategy);\n\npassport.serializeUser((user, done) => {\n  done(null, user);\n});\n\npassport.deserializeUser(function (id, done) {\n  done(null, id);\n});\n\nrouter.post('/',\n  passport.authenticate('local', { session: true }),\n  (req, res) => {\n    switch (req.user) {\n      case \"wrongUser\":\n        res.status(460).send(\"Wrong username\");\n        break;\n      case \"wrongPass\":\n        res.status(461).send(\"Wrong password\");\n        break;\n      default:\n        req.login(req.user, (err) => {\n          console.log(\"successfull login\");\n        });\n        const serverResponse = { \n          success: true, \n          admin: { pseudo: req.user.dataValues.pseudo },\n        };\n        res.json(serverResponse);\n    }\n  });\n\nmodule.exports = router;"],"file":"login.js"}