{"version":3,"sources":["../../routes/admin.js"],"names":["express","require","router","Router","bodyParser","use","json","urlencoded","extended","morgan","passport","adminLoginStrategy","initialize","checkToken","Models","Data","post","req","res","body","firstName","lastName","email","console","log","status","send","User","addUser","id","authenticate","session","user","dataValues","pseudo","serverResponse","success","admin","token","generateJwt","mp","Admin","addAdmin","userList","forEach","get","findOne","where","then","getSondage","sondageList","createSondage","name","Sondage","update","current","sondage","getNumberRemplissages","count","getNumberRemplissagesJour","params","jour","getCommentairesJour","comments","getNumberReponses","getNumberReponsesJour","findById","getStatistics","statisticTab","err","next","message","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\n\nconst router = express.Router();\n\n\n// Le body Parser permet d'acceder aux variable envoyés dans le body\nconst bodyParser = require('body-parser');\n\nrouter.use(bodyParser.json());\nrouter.use(express.urlencoded({ extended: false }));\n\nconst morgan = require('morgan');\n\n// Authentification\nconst passport = require('passport');\nconst adminLoginStrategy = require('../passport-config/adminStrategy');\n\npassport.use(adminLoginStrategy);\npassport.initialize();\n\n// Authentification controllers\nconst checkToken = require('../controllers/adminCheckToken');\n\n// Récupère les models\nconst Models = require('../models/index');\n\n// Récupère les fonctions de recherche de données\nconst Data = require('../models/dataFetch');\n\nrouter.use(morgan('dev'));\n\n\n// L'administrateur peut poster un User pour l'ajouter dans la DB\n// Les attributs de l'utilisateurs sont dans le body de la requête\nrouter.post('/createUser', (req, res) => {\n  // On vérifie que les données minmums pour créer un utilisateur sont bien présentes\n  if (!req.body.firstName || !req.body.lastName || !req.body.email) {\n    console.log(\"/!\\\\ ERROR : The body of the create user request doesnt contain first name or last name or email !\");\n    res.status(400).send(\"Bad Request : The body of the create user request doesnt contain first name or last name or email ! \");\n  } else {\n    console.log(`creating user ${req.body.firstName} ${req.body.lastName}`);\n    Models.User.addUser(req.body.firstName, req.body.lastName, req.body.email, (id) => {\n      res.status(200).send({\n        id: id, firstName: req.body.firstName, lastName: req.body.lastName, email: req.body.email,\n      });\n    });\n  }\n});\n\nrouter.post('/login',\n  passport.authenticate('local', { session: false }),\n  (req, res) => {\n    switch (req.user) {\n      case \"wrongUser\":\n        res.status(460).send(\"Wrong username\");\n        break;\n      case \"wrongPass\":\n        res.status(461).send(\"Wrong username\");\n        break;\n      default:\n        console.log(\"Correct authentification: \", req.user.dataValues.pseudo);\n        const serverResponse = { \n          success: true, \n          admin: { pseudo: req.user.dataValues.pseudo },\n          token: req.user.generateJwt(),\n        };\n        res.json(serverResponse);\n    }\n  });\n\n// --------- Routes protegées par token -------------\n\n// Un administrateur peut ajouter un autre administrateur :\n// Les attributs de l'admin sont dans le body de la requète\n// TODO : Prendre en compte le cas où il y a une erreure au cours de la création de l'admin'\n\n// Routes relatives a la gestion des admins et des users\nrouter.post('/createAdmin', checkToken, (req, res) => {\n  console.log(`creating admin ${req.body.pseudo}`);\n  console.log(req.body);\n  // On vérifie que les données minmums pour créer un utilisateur sont bien présentes\n  if (!req.body.pseudo || !req.body.mp) {\n    console.log(\"/!\\\\ ERROR : The body of the create admin request doesnt contain pseudo or mp !\");\n    res.status(400).send(\"Bad Request : The body of the create admin request doesnt contain pseudo or mp ! \");\n  } else {\n    Models.Admin.addAdmin(req.body.pseudo, req.body.mp, () => {\n      console.log(`Added admin: ${req.body.pseudo}`);\n      res.status(200).send(`User ${req.body.firstName} ${req.body.lastName} created`);\n    });\n  }\n});\n\nrouter.post('/csvPost',\n  checkToken,\n  (req, res) => {\n    req.body.userList.forEach((user) => {\n      Models.User.addUser(user.firstName, user.lastName, user.email, () => {});\n    });\n    res.json(\"user list added\");\n  });\n\nrouter.post('/singlePost',\n  checkToken,\n  (req, res) => {\n    const user = req.body.user;\n    Models.User.addUser(user.firstName, user.lastName, user.email, () => {\n      res.send(\"single user added : \", user.email);\n    });\n  }); \n\n// Route relative à l'affichage et la creation de sondage\n\nrouter.get('/getSondage', checkToken, (req, res) => {\n  Models.Admin.findOne({ where: { id: req.user.id } }).then((admin) => {\n    admin.getSondage((sondageList) => {\n      console.log(\"Sent all sondages to client\");\n      res.status(200).json(sondageList);\n    });\n  });\n});\n\n/* Survey object sent from the front to /postSondage\n  {\n    name: sondagename,\n    thematiqueList: [\n      {\n        name: thematiquename,\n        questionList: [\n          {\n            keyWord: motclef,\n            question: question,\n          },\n          { ... },\n        ]\n      },\n      { ... },\n    ]\n  }\n*/\nrouter.post('/postSondage', checkToken, (req, res) => {\n  Models.Admin.findOne({ where: { id: req.user.id } }).then((admin) => {\n    admin.createSondage(req.body, () => {\n      console.log(\"New sondage created: \", req.body.name);\n      res.status(200).send(\"New sondage created\");\n    });\n  });\n});\n\nrouter.post('/changeNextSondage', checkToken, (req, res) => {\n  if (!req.body) {\n    console.log(\"/!\\\\ ERROR : Inccorect body\");\n    res.status(400).send(\"Bad Request : The body doesnt contain next_sondage ! \");\n  } else {\n    Models.Sondage.update({ current: false }, { where: { current: true } }).then(() => {\n      Models.Sondage.update({ current: true }, { where: { id: req.body.id } }).then((sondage) => {\n        console.log(\"Changed the sondage to sondage: \", req.body.name);\n        res.status(200).json(sondage.dataValues);\n      });\n    });\n  }\n});\n\n// Route relative aux statisques\n\nrouter.get('/numberRemplissages', checkToken, (req, res) => {\n  Data.getNumberRemplissages((count) => {\n    console.log(\"Fetching total number of Remplissage\");\n    res.status(200).json(count);\n  });\n});\n\nrouter.get('/numberRemplissagesJour/:jour', checkToken, (req, res) => {\n  Data.getNumberRemplissagesJour(req.params.jour, (count) => {\n    console.log(\"Fetching total number of Remplissage on: \", req.params.jour);\n    res.status(200).json(count);\n  });\n});\n\nrouter.get('/getCommentaireJour/:jour', checkToken, (req, res) => {\n  Data.getCommentairesJour(req.params.jour, (comments) => {\n    console.log(\"Fetching all Commentaires on: \", req.params.jour);\n    res.status(200).json(comments);\n  });\n});\n\nrouter.get('/numberReponses', checkToken, (req, res) => {\n  Data.getNumberReponses((count) => {\n    console.log(\"Fetching total number of Reponse\");\n    res.status(200).json(count);\n  });\n});\n\nrouter.get('/numberReponsesJour/:jour', checkToken, (req, res) => {\n  Data.getNumberReponsesJour(req.params.jour, (count) => {\n    res.status(200).json(count);\n    console.log(\"Fetching total number of Reponse on: \", req.params.jour);\n  });\n  res.json(\"ok\");\n});\n\nrouter.get(\"/generalStatistics\", (req, res) => {\n  Models.Admin.findById('fake_admin_id').then((admin) => {\n    admin.getStatistics((statisticTab) => {\n      res.json(statisticTab);\n    });\n  });\n});\n\nrouter.use((err, req, res, next) => {\n  console.log(\"error: \", err.name);\n  if (err.name === 'UnauthorizedError') {\n    res.status(401).json({ message: 'Unauthorized. Invalid token!' });\n  }\n});\n\n\nmodule.exports = router;\n"],"file":"admin.js"}