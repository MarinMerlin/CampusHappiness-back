{"version":3,"sources":["../../routes/admin.js"],"names":["express","require","router","Router","bodyParser","use","json","urlencoded","extended","morgan","passport","adminLoginStrategy","initialize","env_var","checkToken","Models","Data","post","req","res","body","firstName","lastName","email","console","log","status","send","User","addUser","id","authenticate","session","user","serverResponse","success","admin","pseudo","dataValues","token","generateJwt","mp","Admin","addAdmin","userList","forEach","next_sondage","get","getNumberRemplissages","count","getNumberRemplissagesJour","params","jour","getNumberReponses","getNumberReponsesJour","err","next","name","message","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\n\nconst router = express.Router();\n\n\n// Le body Parser permet d'acceder aux variable envoyés dans le body\nconst bodyParser = require('body-parser');\n\nrouter.use(bodyParser.json());\nrouter.use(express.urlencoded({ extended: false }));\n\nconst morgan = require('morgan');\n\n// Authentification\nconst passport = require('passport');\nconst adminLoginStrategy = require('../passport-config/adminStrategy');\n\npassport.use(adminLoginStrategy);\npassport.initialize();\n\n// App variables\nconst env_var = require('../variables');\n\n// Authentification controllers\nconst checkToken = require('../controllers/adminCheckToken');\n\n// Récupère les models\nconst Models = require('../models/index');\n\n// Récupère les fonctions de recherche de données\nconst Data = require('../models/dataFetch');\n\nrouter.use(morgan('dev'));\n\n\n// L'administrateur peut poster un User pour l'ajouter dans la DB\n// Les attributs de l'utilisateurs sont dans le body de la requête\nrouter.post('/createUser', (req, res) => {\n  // On vérifie que les données minmums pour créer un utilisateur sont bien présentes\n  if (!req.body.firstName || !req.body.lastName || !req.body.email) {\n    console.log(\"/!\\\\ ERROR : The body of the create user request doesnt contain first name or last name or email !\");\n    res.status(400).send(\"Bad Request : The body of the create user request doesnt contain first name or last name or email ! \");\n  } else {\n    console.log(`creating user ${req.body.firstName} ${req.body.lastName}`);\n    Models.User.addUser(req.body.firstName, req.body.lastName, req.body.email, (id) => {\n      res.status(200).send({\n        id: id, firstName: req.body.firstName, lastName: req.body.lastName, email: req.body.email,\n      });\n    });\n  }\n});\n\nrouter.post('/login',\n  passport.authenticate('local', { session: false }),\n  (req, res) => {\n    switch (req.user) {\n      case \"wrongUser\":\n        res.status(460).send(\"Wrong username\");\n        break;\n      case \"wrongPass\":\n        res.status(461).send(\"Wrong username\");\n        break;\n      default:\n        console.log(\"correct auth\");\n        const serverResponse = { \n          success: true, \n          admin: { pseudo: req.user.dataValues.pseudo },\n          token: req.user.generateJwt(),\n        };\n        res.json(serverResponse);\n    }\n  });\n\n// --------- Routes protegées par token -------------\n\n// Un administrateur peut ajouter un autre administrateur :\n// Les attributs de l'admin sont dans le body de la requète\n// TODO : Prendre en compte le cas où il y a une erreure au cours de la création de l'admin'\nrouter.post('/createAdmin', checkToken, (req, res) => {\n  console.log(`creating admin ${req.body.pseudo}`);\n  console.log(req.body);\n  // On vérifie que les données minmums pour créer un utilisateur sont bien présentes\n  if (!req.body.pseudo || !req.body.mp) {\n    console.log(\"/!\\\\ ERROR : The body of the create admin request doesnt contain pseudo or mp !\");\n    res.status(400).send(\"Bad Request : The body of the create admin request doesnt contain pseudo or mp ! \");\n  } else {\n    Models.Admin.addAdmin(req.body.pseudo, req.body.mp, () => {\n      console.log(`Added: ${req.body.pseudo}`);\n      res.status(200).send(`User ${req.body.firstName} ${req.body.lastName} created`);\n    });\n  }\n});\n\nrouter.post('/csvPost',\n  checkToken,\n  (req, res) => {\n    req.body.userList.forEach((user) => {\n      Models.User.addUser(user.firstName, user.lastName, user.email, () => {});\n    });\n    res.json(\"user list added\");\n  });\n\nrouter.post('/singlePost',\n  checkToken,\n  (req, res) => {\n    const user = req.body.user;\n    Models.User.addUser(user.firstName, user.lastName, user.email, () => {\n      res.send(\"single user added\");\n    });\n  }); \n\nrouter.post('/changeSondage', checkToken, (req, res) => {\n  if (!req.body.next_sondage) {\n    console.log(\"/!\\\\ ERROR : Inccorect body\");\n    res.status(400).send(\"Bad Request : The body doesnt contain next_sondage ! \");\n  } else {\n    env_var.next_sondage = req.body.next_sondage;\n    console.log(\"Changed the sondage to sondage number: \", req.body);\n    res.status(200).json(env_var.next_sondage);\n  }\n});\n\nrouter.get('/numberRemplissages', checkToken, (req, res) => {\n  console.log(env_var.next_sondage);\n  Data.getNumberRemplissages((count) => {\n    res.status(200).json(count);\n  });\n});\n\nrouter.get('/numberRemplissagesJour/:jour', checkToken, (req, res) => {\n  Data.getNumberRemplissagesJour(req.params.jour, (count) => {\n    res.status(200).json(count);\n  });\n});\n\nrouter.get('/numberReponses', checkToken, (req, res) => {\n  Data.getNumberReponses((count) => {\n    res.status(200).json(count);\n  });\n});\n\nrouter.get('/numberReponsesJour/:jour', checkToken, (req, res) => {\n  Data.getNumberReponsesJour(req.params.jour, (count) => {\n    res.status(200).json(count);\n  });\n});\n\nrouter.use((err, req, res, next) => {\n  console.log(\"error: \", err.name);\n  if (err.name === 'UnauthorizedError') {\n    res.status(401).json({ message: 'Unauthorized. Invalid token!' });\n  }\n});\n\nmodule.exports = router;\n"],"file":"admin.js"}