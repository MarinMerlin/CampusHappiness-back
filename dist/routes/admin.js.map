{"version":3,"sources":["../../routes/admin.js"],"names":["express","require","passport","router","Router","bodyParser","use","json","urlencoded","extended","morgan","Models","Data","adminLoginStrategy","serializeUser","user","done","console","log","id","deserializeUser","checkToken","req","res","next","isAuthenticated","url","status","message","post","authenticate","session","send","dataValues","pseudo","login","err","JSON","stringify","serverResponse","success","admin","get","destroy","body","mp","Admin","addAdmin","Date","now","then","promises","userList","forEach","push","User","addUser","firstName","lastName","email","Promise","all","findOne","where","getSondage","sondageList","createSondage","name","Sondage","update","current","sondage","getNumberRemplissages","count","getNumberRemplissagesJour","params","jour","getCommentairesJour","comments","getNumberReponses","getNumberReponsesJour","findById","getStatistics","statisticTab","getStatisticsSpecific","sondageResult","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\nconst passport = require('passport');\n\nconst router = express.Router();\n\n\n// Le body Parser permet d'acceder aux variable envoyés dans le body\nconst bodyParser = require('body-parser');\n\nrouter.use(bodyParser.json());\nrouter.use(express.urlencoded({ extended: false }));\n\nconst morgan = require('morgan');\n\n// Récupère les models\nconst Models = require('../models/index');\n\n// Récupère les fonctions de recherche de données\nconst Data = require('../models/dataFetch');\n\nrouter.use(morgan('dev'));\n\n// Authentification\nconst adminLoginStrategy = require('../passport-config/adminStrategy');\n\npassport.use(adminLoginStrategy);\npassport.serializeUser((user, done) => {\n  console.log('Inside serializeUser callback. User id is save to the session file store here');\n  done(null, user.id);\n});\npassport.deserializeUser(function (id, done) {\n  done(null, id);\n});\n\n// Authentification controllers\nconst checkToken = require('../controllers/adminCheckToken');\n\nrouter.use((req, res, next) => {\n  if (!req.isAuthenticated() && req.url !== '/login') {\n    res.status(401).json({ message: 'Unauthorized. User not logged in!' });\n  } else {\n    next();\n  }\n});\n\nrouter.post('/login',\n  passport.authenticate('local', { session: true }),\n  (req, res) => {\n    switch (req.user) {\n      case \"wrongUser\":\n        res.status(460).send(\"Wrong username\");\n        break;\n      case \"wrongPass\":\n        res.status(461).send(\"Wrong username\");\n        break;\n      default:\n        console.log(\"Correct authentification: \", req.user.dataValues.pseudo);\n        req.login(req.user, (err) => {\n          console.log('Inside req.login() callback');\n          console.log(`req.session.passport: ${JSON.stringify(req.session.passport)}`);\n          console.log(`req.user: ${JSON.stringify(req.user)}`);\n        });\n        const serverResponse = { \n          success: true, \n          admin: { pseudo: req.user.dataValues.pseudo },\n        };\n        res.json(serverResponse);\n    }\n  });\n\n// --------- Routes protegées par token -------------\n\n// Un administrateur peut ajouter un autre administrateur :\n// Les attributs de l'admin sont dans le body de la requète\n// TODO : Prendre en compte le cas où il y a une erreure au cours de la création de l'admin'\n\n// Logout the session\n\nrouter.get('/logout', (req, res) => {\n  req.session.destroy();\n  res.send(\"User logged out\");\n});\n\n// Routes relatives a la gestion des admins et des users\nrouter.post('/createAdmin', (req, res) => {\n  console.log(`creating admin ${req.body.pseudo}`);\n  // On vérifie que les données minmums pour créer un utilisateur sont bien présentes\n  if (!req.body.pseudo || !req.body.mp) {\n    console.log(\"/!\\\\ ERROR : The body of the create admin request doesnt contain pseudo or mp !\");\n    res.status(400).send(\"Bad Request : The body of the create admin request doesnt contain pseudo or mp ! \");\n  } else {\n    Models.Admin.addAdmin(req.body.pseudo, req.body.mp, Date.now()).then(() => {\n      console.log(`Added admin: ${req.body.pseudo}`);\n      res.status(200).send(`Admin ${req.body.pseudo} created`);\n    });\n  }\n});\n\nrouter.post('/csvPost',\n  (req, res) => {\n    const promises = [];\n    req.body.userList.forEach((user) => {\n      promises.push(Models.User.addUser(user.firstName, user.lastName, user.email));\n    });\n    Promise.all(promises).then(res.status(200).json(\"User list added\"));\n  });\n\nrouter.post('/singlePost',\n  (req, res) => {\n    Models.User.addUser(req.body.user.firstName, req.body.user.lastName, req.body.user.email).then(() => {\n      res.status(200).send(req.body.email);\n      console.log(\"New user added: \", req.body.user);\n    });\n  }); \n\n// Route relative à l'affichage et la creation de sondage\n\nrouter.get('/getSondage', (req, res) => {\n  Models.Admin.findOne({ where: { id: req.user } }).then((admin) => {\n    admin.getSondage().then((sondageList) => {\n      console.log(\"Sent all sondages to client\");\n      res.status(200).json(sondageList);\n    });\n  });\n});\n\n/* Survey object sent from the front to /postSondage\n  {\n    name: sondagename,\n    thematiqueList: [\n      {\n        name: thematiquename,\n        questionList: [\n          {\n            keyWord: motclef,\n            question: question,\n          },\n          { ... },\n        ]\n      },\n      { ... },\n    ]\n  }\n*/\nrouter.post('/postSondage', (req, res) => {\n  Models.Admin.findOne({ where: { id: req.user } }).then((admin) => {\n    admin.createSondage(req.body).then(() => {\n      console.log(\"New sondage created: \", req.body.name);\n      res.status(200).send(\"New sondage created\");\n    });\n  });\n});\n\nrouter.post('/changeNextSondage', (req, res) => {\n  if (!req.body) {\n    console.log(\"/!\\\\ ERROR : Inccorect body\");\n    res.status(400).send(\"Bad Request : The body doesnt contain next_sondage ! \");\n  } else {\n    Models.Sondage.update({ current: false }, { where: { current: true } }).then(() => {\n      Models.Sondage.update({ current: true }, { where: { id: req.body.id } }).then((sondage) => {\n        console.log(\"Changed the sondage to sondage: \", req.body.name);\n        res.status(200).json(sondage.dataValues);\n      });\n    });\n  }\n});\n\n// Route relative aux statisques\n\nrouter.get('/numberRemplissages', (req, res) => {\n  Data.getNumberRemplissages((count) => {\n    console.log(\"Fetching total number of Remplissage\");\n    res.status(200).json(count);\n  });\n});\n\nrouter.get('/numberRemplissagesJour/:jour', (req, res) => {\n  Data.getNumberRemplissagesJour(req.params.jour, (count) => {\n    console.log(\"Fetching total number of Remplissage on: \", req.params.jour);\n    res.status(200).json(count);\n  });\n});\n\nrouter.get('/getCommentaireJour/:jour', (req, res) => {\n  Data.getCommentairesJour(req.params.jour, (comments) => {\n    console.log(\"Fetching all Commentaires on: \", req.params.jour);\n    res.status(200).json(comments);\n  });\n});\n\nrouter.get('/numberReponses', (req, res) => {\n  Data.getNumberReponses((count) => {\n    console.log(\"Fetching total number of Reponse\");\n    res.status(200).json(count);\n  });\n});\n\nrouter.get('/numberReponsesJour/:jour', (req, res) => {\n  Data.getNumberReponsesJour(req.params.jour, (count) => {\n    res.status(200).json(count);\n    console.log(\"Fetching total number of Reponse on: \", req.params.jour);\n  });\n  res.json(\"ok\");\n});\n\nrouter.get(\"/generalStatistics\", (req, res) => {\n  Models.Admin.findById(req.user).then((admin) => {\n    admin.getStatistics((statisticTab) => {\n      res.json(statisticTab);\n    });\n  });\n});\n\nrouter.get(\"/specificStatistics/:year/:month/:day\", (req, res) => {\n  Models.Admin.findById(req.user).then((admin) => {\n    admin.getStatisticsSpecific(req.params).then((sondageResult) => {\n      res.json(sondageResult);\n    });\n  });\n});\n\nmodule.exports = router;"],"file":"admin.js"}