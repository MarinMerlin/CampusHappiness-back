<<<<<<< HEAD
{"version":3,"sources":["../../routes/user.js"],"names":["express","require","router","Router","fs","bodyParser","use","json","urlencoded","extended","morgan","Models","req","res","next","isAuthenticated","url","status","message","post","newCookie","Object","assign","user","body","updatedUser","login","console","log","User","updateUser","id","then","base64Data","photo","replace","writeFile","pseudo","err","update","where","get","Sondage","findOne","current","sondage","Remplissage","user_id","date","Date","now","sondage_id","dataValues","remplissage","token","alreadyAnswered","generateJwt","send","getUserStat","data","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\n\nconst router = express.Router();\n\nconst fs = require('fs');\n\n// Le body Parser permet d'acceder aux variable envoyés dans le body\nconst bodyParser = require('body-parser');\n\nrouter.use(bodyParser.json());\nrouter.use(express.urlencoded({ extended: false }));\n\nconst morgan = require('morgan');\n\nrouter.use(morgan('dev'));\n\n// Récupère les models\nconst Models = require('../models');\n\nrouter.use((req, res, next) => {\n  if (!req.isAuthenticated() && req.url !== '/login') {\n    res.status(401).json({ message: 'Not logged in' });\n  } else {\n    next();\n  }\n});\n\n// --------- Routes protegées-------------\n\nrouter.post('/updateUser', (req, res) => {\n  const newCookie = Object.assign(req.user, req.body.updatedUser);\n  req.login(newCookie, () => {\n    console.log(\"Modified cookie: \", newCookie);\n  });\n  Models.User.updateUser(req.user.id, req.body.updatedUser).then(() => {\n    res.status(200).json(req.body.updatedUser);\n  });\n});\n\nrouter.post('/updatePhoto', (req, res) => {\n  const base64Data = req.body.photo.replace(/^data:image\\/jpeg;base64,/, \"\");\n  console.log(base64Data);\n  fs.writeFile(`./public/user/photo/${req.user.pseudo}`, base64Data, 'base64', (err) => {\n    if (err) { \n      console.log(err);\n    } else {\n      Models.User.update(\n        { photo: `/user/photo/${req.user.pseudo}.jpg` },\n        { where: { id: req.user.id } },\n      ).then(() => {\n        res.status(200).json({ photo: `/user/photo/${req.user.pseudo}` });\n      });\n    }\n  });\n});\n\nrouter.get('/getToken', (req, res) => {\n  Models.Sondage.findOne({ where: { current: true } }).then((sondage) => {\n    Models.Remplissage.findOne(\n      { where: { user_id: req.user.id, date: Date.now(), sondage_id: sondage.dataValues.id } },\n    )\n      .then((remplissage) => {\n        Models.User.findOne({ where: { id: req.user.id } })\n          .then((user) => {\n            const sondage_id = sondage.dataValues.id;\n            let token;\n            let alreadyAnswered = false;\n            if (remplissage) {\n              alreadyAnswered = true;\n              token = user.generateJwt(sondage_id, remplissage.dataValues.id);\n            } else {\n              token = user.generateJwt(sondage_id);\n            }\n            res.status(200).send({ token: token, alreadyAnswered: alreadyAnswered });\n          });\n      });\n  });\n});\n\n\nrouter.get('/userStat', (req, res) => {\n  Models.User.findOne({ where: { id: req.user.id } }).then((user) => {\n    user.getUserStat().then((data) => {\n      res.status(200).send(data);\n    });\n  });\n});\n \nmodule.exports = router;"],"file":"user.js"}
=======
{"version":3,"sources":["../../routes/user.js"],"names":["express","require","router","Router","fs","bodyParser","use","json","urlencoded","extended","morgan","Models","req","res","next","isAuthenticated","url","status","message","post","newCookie","Object","assign","user","body","updatedUser","login","console","log","User","updateUser","id","then","base64Data","photo","replace","writeFile","pseudo","err","update","where","get","Sondage","findOne","current","sondage","Remplissage","user_id","date","Date","now","sondage_id","dataValues","remplissage","token","alreadyAnswered","generateJwt","send","getUserStat","data","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\n\nconst router = express.Router();\n\nconst fs = require('fs');\n\n// Le body Parser permet d'acceder aux variable envoyés dans le body\nconst bodyParser = require('body-parser');\n\nrouter.use(bodyParser.json());\nrouter.use(express.urlencoded({ extended: false }));\n\nconst morgan = require('morgan');\n\nrouter.use(morgan('dev'));\n\n// Récupère les models\nconst Models = require('../models');\n\nrouter.use((req, res, next) => {\n  if (!req.isAuthenticated() && req.url !== '/login') {\n    res.status(401).json({ message: 'Not logged in' });\n  } else {\n    next();\n  }\n});\n\n// --------- Routes protegées-------------\n\nrouter.post('/updateUser', (req, res) => {\n  const newCookie = Object.assign(req.user, req.body.updatedUser);\n  req.login(newCookie, () => {\n    console.log(\"Modified cookie: \", newCookie);\n  });\n  Models.User.updateUser(req.user.id, req.body.updatedUser).then(() => {\n    res.status(200).json(req.body.updatedUser);\n  });\n});\n\nrouter.post('/updatePhoto', (req, res) => {\n  const base64Data = req.body.photo.replace(/^data:image\\/jpeg;base64,/, \"\");\n  fs.writeFile(`./public/user/photo/${req.user.pseudo}.jpg`, base64Data, 'base64', (err) => {\n    if (err) { \n      console.log(err);\n    } else {\n      Models.User.update(\n        { photo: `/user/photo/${req.user.pseudo}.jpg` },\n        { where: { id: req.user.id } },\n      ).then(() => {\n        res.status(200).json({ photo: `/user/photo/${req.user.pseudo}` });\n      });\n    }\n  });\n});\n\nrouter.get('/getToken', (req, res) => {\n  Models.Sondage.findOne({ where: { current: true } }).then((sondage) => {\n    Models.Remplissage.findOne(\n      { where: { user_id: req.user.id, date: Date.now(), sondage_id: sondage.dataValues.id } },\n    )\n      .then((remplissage) => {\n        Models.User.findOne({ where: { id: req.user.id } })\n          .then((user) => {\n            const sondage_id = sondage.dataValues.id;\n            let token;\n            let alreadyAnswered = false;\n            if (remplissage) {\n              alreadyAnswered = true;\n              token = user.generateJwt(sondage_id, remplissage.dataValues.id);\n            } else {\n              token = user.generateJwt(sondage_id);\n            }\n            res.status(200).send({ token: token, alreadyAnswered: alreadyAnswered });\n          });\n      });\n  });\n});\n\n\nrouter.get('/userStat', (req, res) => {\n  Models.User.findOne({ where: { id: req.user.id } }).then((user) => {\n    user.getUserStat().then((data) => {\n      res.status(200).send(data);\n    });\n  });\n});\n \nmodule.exports = router;"],"file":"user.js"}
>>>>>>> refs/remotes/origin/dev
