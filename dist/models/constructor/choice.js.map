{"version":3,"sources":["../../../models/constructor/choice.js"],"names":["Sequelize","require","id_generator","choiceConstructor","sequelize","Choice","define","id","type","STRING","allowNull","primaryKey","text","value","INTEGER","question_id","timestamps","addChoice","Promise","resolve","sync","then","create","module","exports"],"mappings":";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,kCAAD,CAA5B;;AAEA,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUC,SAAV,EAAqB;AAC7C,MAAMC,MAAM,GAAGD,SAAS,CAACE,MAAV,CAAiB,QAAjB,EAA2B;AACxCC,IAAAA,EAAE,EAAE;AACFC,MAAAA,IAAI,EAAER,SAAS,CAACS,MADd;AAEFC,MAAAA,SAAS,EAAE,KAFT;AAGFC,MAAAA,UAAU,EAAE;AAHV,KADoC;AAMxCC,IAAAA,IAAI,EAAE;AACJJ,MAAAA,IAAI,EAAER,SAAS,CAACS,MADZ;AAEJC,MAAAA,SAAS,EAAE;AAFP,KANkC;AAUxCG,IAAAA,KAAK,EAAE;AACLL,MAAAA,IAAI,EAAER,SAAS,CAACc,OADX;AAELJ,MAAAA,SAAS,EAAE;AAFN,KAViC;AAcxCK,IAAAA,WAAW,EAAE;AACXP,MAAAA,IAAI,EAAER,SAAS,CAACS,MADL;AAEXC,MAAAA,SAAS,EAAE;AAFA;AAd2B,GAA3B,EAkBZ;AACDM,IAAAA,UAAU,EAAE;AADX,GAlBY,CAAf;;AAsBAX,EAAAA,MAAM,CAACY,SAAP,GAAmB,UAAUL,IAAV,EAAgBC,KAAhB,EAAuBE,WAAvB,EAAoC;AACrD,WAAO,IAAIG,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpCd,MAAAA,MAAM,CAACe,IAAP,GAAcC,IAAd,CAAmB,YAAM;AACvBhB,QAAAA,MAAM,CAACiB,MAAP,CAAc;AACZf,UAAAA,EAAE,EAAEL,YAAY,EADJ;AAEZU,UAAAA,IAAI,EAAEA,IAFM;AAGZC,UAAAA,KAAK,EAAEA,KAHK;AAIZE,UAAAA,WAAW,EAAEA;AAJD,SAAd,EAKGM,IALH,CAKQ,YAAM;AAAEF,UAAAA,OAAO;AAAK,SAL5B;AAMD,OAPD;AAQD,KATM,CAAP;AAUD,GAXD;;AAYA,SAAOd,MAAP;AACD,CApCD;;AAsCAkB,MAAM,CAACC,OAAP,GAAiBrB,iBAAjB","sourcesContent":["const Sequelize = require('sequelize');\nconst id_generator = require('../../custom_module/id_generator');\n\nconst choiceConstructor = function (sequelize) {\n  const Choice = sequelize.define('choice', {\n    id: {\n      type: Sequelize.STRING,\n      allowNull: false,\n      primaryKey: true,\n    },\n    text: {\n      type: Sequelize.STRING,\n      allowNull: false,\n    },\n    value: {\n      type: Sequelize.INTEGER,\n      allowNull: false,\n    },\n    question_id: {\n      type: Sequelize.STRING,\n      allowNull: false,\n    },\n  }, {\n    timestamps: false,\n  });\n\n  Choice.addChoice = function (text, value, question_id) {\n    return new Promise(function (resolve) {\n      Choice.sync().then(() => {\n        Choice.create({\n          id: id_generator(),\n          text: text,\n          value: value,\n          question_id: question_id,\n        }).then(() => { resolve(); });\n      });\n    });\n  };\n  return Choice;\n};\n\nmodule.exports = choiceConstructor;"],"file":"choice.js"}