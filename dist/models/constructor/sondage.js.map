{"version":3,"sources":["../../../models/constructor/sondage.js"],"names":["Sequelize","require","sondageConstructor","sequelize","Sondage","define","id","allowNull","type","STRING","primaryKey","name","author","createdAt","DATEONLY","timestamps","addSondage","Promise","resolve","sync","then","create","module","exports"],"mappings":";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAUC,SAAV,EAAqB;AAC9C,MAAMC,OAAO,GAAGD,SAAS,CAACE,MAAV,CAAiB,SAAjB,EAA4B;AAC1CC,IAAAA,EAAE,EAAE;AACFC,MAAAA,SAAS,EAAE,KADT;AAEFC,MAAAA,IAAI,EAAER,SAAS,CAACS,MAFd;AAGFC,MAAAA,UAAU,EAAE;AAHV,KADsC;AAM1CC,IAAAA,IAAI,EAAE;AACJJ,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,IAAI,EAAER,SAAS,CAACS;AAFZ,KANoC;AAU1CG,IAAAA,MAAM,EAAE;AACNL,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,IAAI,EAAER,SAAS,CAACS;AAFV,KAVkC;AAc1CI,IAAAA,SAAS,EAAE;AACTN,MAAAA,SAAS,EAAE,KADF;AAETC,MAAAA,IAAI,EAAER,SAAS,CAACc;AAFP;AAd+B,GAA5B,EAkBb;AACDC,IAAAA,UAAU,EAAE;AADX,GAlBa,CAAhB;;AAsBAX,EAAAA,OAAO,CAACY,UAAR,GAAqB,UAAUV,EAAV,EAAcM,MAAd,EAAsBC,SAAtB,EAAiCF,IAAjC,EAAuC;AAC1D,WAAO,IAAIM,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpCd,MAAAA,OAAO,CAACe,IAAR,GAAeC,IAAf,CAAoB,YAAM;AACxBhB,QAAAA,OAAO,CAACiB,MAAR,CAAe;AACbf,UAAAA,EAAE,EAAEA,EADS;AAEbK,UAAAA,IAAI,EAAEA,IAFO;AAGbC,UAAAA,MAAM,EAAEA,MAHK;AAIbC,UAAAA,SAAS,EAAEA;AAJE,SAAf,EAKGO,IALH,CAKQ,YAAM;AACZF,UAAAA,OAAO;AACR,SAPD;AAQD,OATD;AAUD,KAXM,CAAP;AAYD,GAbD;;AAcA,SAAOd,OAAP;AACD,CAtCD;;AAwCAkB,MAAM,CAACC,OAAP,GAAiBrB,kBAAjB","sourcesContent":["const Sequelize = require('sequelize');\n\nconst sondageConstructor = function (sequelize) {\n  const Sondage = sequelize.define('sondage', {\n    id: {\n      allowNull: false,\n      type: Sequelize.STRING,\n      primaryKey: true,\n    },\n    name: {\n      allowNull: false,\n      type: Sequelize.STRING,\n    },\n    author: {\n      allowNull: false,\n      type: Sequelize.STRING,\n    },\n    createdAt: {\n      allowNull: false,\n      type: Sequelize.DATEONLY,\n    },\n  }, {\n    timestamps: false,\n  });\n\n  Sondage.addSondage = function (id, author, createdAt, name) {\n    return new Promise(function (resolve) {\n      Sondage.sync().then(() => {\n        Sondage.create({\n          id: id,\n          name: name,\n          author: author,\n          createdAt: createdAt,\n        }).then(() => {\n          resolve();\n        });\n      });\n    });\n  };\n  return Sondage;\n};\n\nmodule.exports = sondageConstructor;\n"],"file":"sondage.js"}