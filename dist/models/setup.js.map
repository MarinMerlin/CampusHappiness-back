{"version":3,"sources":["../../models/setup.js"],"names":["Models","require","Sondage","Thematique","User","Reponse","Question","Remplissage","Admin","JourSondage","Commentaire","alert","console","log","creationTable","sync","force","then","create","id","pseudo","salt","hash","createdAt","Date","now","firstName","lastName","email","lastMailDate","mailIntensity","author","name","current","sondage_id","date_emmission","nombre_emission","valeur","thematique_id","keyWord","user_id","date","remplissage_id","commentaire","question_id","setupTables","commentaireDel","Promise","resolve","drop","reponseDel","jourSondageDel","all","questionDel","remplissageDel","thematiqueDel","userDel"],"mappings":";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;IAGEC,O,GACEF,M,CADFE,O;IAASC,U,GACPH,M,CADOG,U;IAAYC,I,GACnBJ,M,CADmBI,I;IAAMC,O,GACzBL,M,CADyBK,O;IAASC,Q,GAClCN,M,CADkCM,Q;IAAUC,W,GAC5CP,M,CAD4CO,W;IAAaC,K,GACzDR,M,CADyDQ,K;IAAOC,W,GAChET,M,CADgES,W;IAAaC,W,GAC7EV,M,CAD6EU,W;;AAGjF,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAY;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACD,CALD,C,CAOA;;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAY;AAChCN,EAAAA,KAAK,CAACO,IAAN,CAAW;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAX,EAA4BC,IAA5B,CAAiC,YAAM;AACrCT,IAAAA,KAAK,CAACU,MAAN,CAAa;AACXC,MAAAA,EAAE,EAAE,eADO;AAEXC,MAAAA,MAAM,EAAE,aAFG;AAGXC,MAAAA,IAAI,EAAE,WAHK;AAIXC,MAAAA,IAAI,EAAE,WAJK;AAKXC,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AALA,KAAb;AAOD,GARD,EAQGR,IARH,CAQQ,YAAM;AACZb,IAAAA,IAAI,CAACW,IAAL,CAAU;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAV,EAA2BC,IAA3B,CAAgC,YAAM;AACpCb,MAAAA,IAAI,CAACc,MAAL,CAAY;AACVC,QAAAA,EAAE,EAAE,cADM;AAEVO,QAAAA,SAAS,EAAE,iBAFD;AAGVC,QAAAA,QAAQ,EAAE,gBAHA;AAIVC,QAAAA,KAAK,EAAE,gCAJG;AAKVC,QAAAA,YAAY,EAAEL,IAAI,CAACC,GAAL,EALJ;AAMVK,QAAAA,aAAa,EAAE;AANL,OAAZ;AAQD,KATD,EASGb,IATH,CASQ,YAAM;AACZf,MAAAA,OAAO,CAACa,IAAR,CAAa;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAb,EAA8BC,IAA9B,CAAmC,YAAM;AACvCf,QAAAA,OAAO,CAACgB,MAAR,CAAe;AACbC,UAAAA,EAAE,EAAE,iBADS;AAEbY,UAAAA,MAAM,EAAE,aAFK;AAGbR,UAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAHE;AAIbO,UAAAA,IAAI,EAAE,WAJO;AAKbC,UAAAA,OAAO,EAAE;AALI,SAAf;AAOD,OARD,EAQGhB,IARH,CAQQ,YAAM;AACZR,QAAAA,WAAW,CAACM,IAAZ,CAAiB;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAjB,EAAkCC,IAAlC,CAAuC,YAAM;AAC3CR,UAAAA,WAAW,CAACS,MAAZ,CAAmB;AACjBC,YAAAA,EAAE,EAAE,sBADa;AAEjBe,YAAAA,UAAU,EAAE,iBAFK;AAGjBC,YAAAA,cAAc,EAAEX,IAAI,CAACC,GAAL,EAHC;AAIjBW,YAAAA,eAAe,EAAE;AAJA,WAAnB;AAMD,SAPD;AAQAjC,QAAAA,UAAU,CAACY,IAAX,CAAgB;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAhB,EAAiCC,IAAjC,CAAsC,YAAM;AAC1Cd,UAAAA,UAAU,CAACe,MAAX,CAAkB;AAChBC,YAAAA,EAAE,EAAE,oBADY;AAEhBa,YAAAA,IAAI,EAAE;AAFU,WAAlB;AAID,SALD,EAKGf,IALH,CAKQ,YAAM;AACZX,UAAAA,QAAQ,CAACS,IAAT,CAAc;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAd,EAA+BC,IAA/B,CAAoC,YAAM;AACxCX,YAAAA,QAAQ,CAACY,MAAT,CAAgB;AACdC,cAAAA,EAAE,EAAE,kBADU;AAEde,cAAAA,UAAU,EAAE,iBAFE;AAGdG,cAAAA,MAAM,EAAE,eAHM;AAIdC,cAAAA,aAAa,EAAE,oBAJD;AAKdC,cAAAA,OAAO,EAAE;AALK,aAAhB;AAOD,WARD,EAQGtB,IARH,CAQQ,YAAM;AACZV,YAAAA,WAAW,CAACQ,IAAZ,CAAiB;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAjB,EAAkCC,IAAlC,CAAuC,YAAM;AAC3CV,cAAAA,WAAW,CAACW,MAAZ,CAAmB;AACjBC,gBAAAA,EAAE,EAAE,qBADa;AAEjBe,gBAAAA,UAAU,EAAE,iBAFK;AAGjBM,gBAAAA,OAAO,EAAE,cAHQ;AAIjBC,gBAAAA,IAAI,EAAEjB,IAAI,CAACC,GAAL;AAJW,eAAnB;AAMD,aAPD,EAOGR,IAPH,CAOQ,YAAM;AACZP,cAAAA,WAAW,CAACK,IAAZ,CAAiB;AAAEC,gBAAAA,KAAK,EAAE;AAAT,eAAjB,EAAkCC,IAAlC,CAAuC,YAAM;AAC3CP,gBAAAA,WAAW,CAACQ,MAAZ,CAAmB;AACjBC,kBAAAA,EAAE,EAAE,qBADa;AAEjBuB,kBAAAA,cAAc,EAAE,qBAFC;AAGjBJ,kBAAAA,aAAa,EAAE,oBAHE;AAIjBK,kBAAAA,WAAW,EAAE;AAJI,iBAAnB;AAMD,eAPD,EAOG1B,IAPH,CAOQ,YAAM;AACZZ,gBAAAA,OAAO,CAACU,IAAR,CAAa;AAAEC,kBAAAA,KAAK,EAAE;AAAT,iBAAb,EAA8BC,IAA9B,CAAmC,YAAM;AACvCZ,kBAAAA,OAAO,CAACa,MAAR,CAAe;AACbC,oBAAAA,EAAE,EAAE,iBADS;AAEbuB,oBAAAA,cAAc,EAAE,qBAFH;AAGbE,oBAAAA,WAAW,EAAE,kBAHA;AAIbP,oBAAAA,MAAM,EAAE;AAJK,mBAAf;AAMD,iBAPD,EAOGpB,IAPH,CAOQ,YAAM,CACb,CARD;AASD,eAjBD;AAkBD,aA1BD;AA2BD,WApCD;AAqCD,SA3CD;AA4CD,OA7DD;AA8DD,KAxED;AAyED,GAlFD;AAmFD,CApFD;;AAsFA,IAAM4B,WAAW,GAAG,SAAdA,WAAc,GAAY;AAC9B,MAAMC,cAAc,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpDtC,IAAAA,WAAW,CAACuC,IAAZ,GAAmBhC,IAAnB,CAAwB,YAAM;AAC5BL,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAmC,MAAAA,OAAO;AACR,KAHD;AAID,GALsB,CAAvB;AAOA,MAAME,UAAU,GAAG,IAAIH,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAChD3C,IAAAA,OAAO,CAAC4C,IAAR,GAAehC,IAAf,CAAoB,YAAM;AACxBL,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAmC,MAAAA,OAAO;AACR,KAHD;AAID,GALkB,CAAnB;AAOA,MAAMG,cAAc,GAAG,IAAIJ,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpDvC,IAAAA,WAAW,CAACwC,IAAZ,GAAmBhC,IAAnB,CAAwB,YAAM;AAC5BL,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAmC,MAAAA,OAAO;AACR,KAHD;AAID,GALsB,CAAvB;AAOAD,EAAAA,OAAO,CAACK,GAAR,CAAY,CAACN,cAAD,EAAiBI,UAAjB,EAA6BC,cAA7B,CAAZ,EAA0DlC,IAA1D,CAA+D,YAAM;AACnE,QAAMoC,WAAW,GAAG,IAAIN,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACjD1C,MAAAA,QAAQ,CAAC2C,IAAT,GAAgBhC,IAAhB,CAAqB,YAAM;AACzBL,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAmC,QAAAA,OAAO;AACR,OAHD;AAID,KALmB,CAApB;AAMA,QAAMM,cAAc,GAAG,IAAIP,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpDzC,MAAAA,WAAW,CAAC0C,IAAZ,GAAmBhC,IAAnB,CAAwB,YAAM;AAC5BL,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAmC,QAAAA,OAAO;AACR,OAHD;AAID,KALsB,CAAvB;AAMAD,IAAAA,OAAO,CAACK,GAAR,CAAY,CAACC,WAAD,EAAcC,cAAd,CAAZ,EAA2CrC,IAA3C,CAAgD,YAAM;AACpD,UAAMsC,aAAa,GAAG,IAAIR,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACnD7C,QAAAA,UAAU,CAAC8C,IAAX,GAAkBhC,IAAlB,CAAuB,YAAM;AAC3BL,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAmC,UAAAA,OAAO;AACR,SAHD;AAID,OALqB,CAAtB;AAMA,UAAMQ,OAAO,GAAG,IAAIT,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAC7C5C,QAAAA,IAAI,CAAC6C,IAAL,GAAYhC,IAAZ,CAAiB,YAAM;AACrBL,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAmC,UAAAA,OAAO;AACR,SAHD;AAID,OALe,CAAhB;AAMAD,MAAAA,OAAO,CAACK,GAAR,CAAY,CAACG,aAAD,EAAgBC,OAAhB,CAAZ,EAAsCvC,IAAtC,CAA2C,YAAM;AAC/Cf,QAAAA,OAAO,CAAC+C,IAAR,GAAehC,IAAf,CAAoB,YAAM;AACxBL,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAL,UAAAA,KAAK,CAACyC,IAAN,GAAahC,IAAb,CAAkB,YAAM;AACtBL,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAY,4DAAZ;AACAC,YAAAA,aAAa;AACd,WAJD;AAKD,SAPD;AAQD,OATD;AAUD,KAvBD;AAwBD,GArCD;AAsCD,CA5DD;;AA8DA+B,WAAW","sourcesContent":["const Models = require(\"./index\");\n\nconst { \n  Sondage, Thematique, User, Reponse, Question, Remplissage, Admin, JourSondage, Commentaire,\n} = Models;\n\nconst alert = function () {\n  console.log(\"\");\n  console.log(\"\");\n  console.log(\" ********* toutes les tables ont été crée *********\");\n  console.log(\"\");\n};\n\n// setup: créer les tables avec 1 fausse valeur dans chaque\nconst creationTable = function () {\n  Admin.sync({ force: true }).then(() => {\n    Admin.create({\n      id: \"fake_admin_id\",\n      pseudo: \"fake_pseudo\",\n      salt: \"fake_salt\",\n      hash: \"fake_hash\",\n      createdAt: Date.now(),\n    });\n  }).then(() => {\n    User.sync({ force: true }).then(() => {\n      User.create({\n        id: \"fake_user_id\",\n        firstName: \"fake_first_name\",\n        lastName: \"fake_last_name\",\n        email: \"fake_user_email@fake_mail.bite\",\n        lastMailDate: Date.now(),\n        mailIntensity: 1,\n      });\n    }).then(() => {\n      Sondage.sync({ force: true }).then(() => {\n        Sondage.create({\n          id: \"fake_sondage_id\",\n          author: \"fake_author\",\n          createdAt: Date.now(),\n          name: \"fake_name\",\n          current: true,\n        });\n      }).then(() => {\n        JourSondage.sync({ force: true }).then(() => {\n          JourSondage.create({\n            id: \"fake_jour_sondage_id\",\n            sondage_id: \"fake_sondage_id\",\n            date_emmission: Date.now(),\n            nombre_emission: 1,\n          });\n        });\n        Thematique.sync({ force: true }).then(() => {\n          Thematique.create({\n            id: \"fake_thematique_id\",\n            name: \"fake_name\",\n          });\n        }).then(() => {\n          Question.sync({ force: true }).then(() => {\n            Question.create({\n              id: \"fake_question_id\",\n              sondage_id: \"fake_sondage_id\",\n              valeur: \"fake_question\",\n              thematique_id: \"fake_thematique_id\",\n              keyWord: \"fake_keyWord\",\n            });\n          }).then(() => {\n            Remplissage.sync({ force: true }).then(() => {\n              Remplissage.create({\n                id: \"fake_remplissage_id\",\n                sondage_id: \"fake_sondage_id\",\n                user_id: \"fake_user_id\",\n                date: Date.now(),\n              });\n            }).then(() => {\n              Commentaire.sync({ force: true }).then(() => {\n                Commentaire.create({\n                  id: \"fake_commentaire_id\",\n                  remplissage_id: \"fake_remplissage_id\",\n                  thematique_id: \"fake_thematique_id\",\n                  commentaire: \"fake_commentaire\",\n                });\n              }).then(() => {\n                Reponse.sync({ force: true }).then(() => {\n                  Reponse.create({\n                    id: \"fake_reponse_id\",\n                    remplissage_id: \"fake_remplissage_id\",\n                    question_id: \"fake_question_id\",\n                    valeur: 0,\n                  });\n                }).then(() => {\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n};\n\nconst setupTables = function () {\n  const commentaireDel = new Promise(function (resolve) {\n    Commentaire.drop().then(() => {\n      console.log('table commentaire supprimée');\n      resolve();\n    });\n  });\n\n  const reponseDel = new Promise(function (resolve) {\n    Reponse.drop().then(() => {\n      console.log('table reponse supprimée');\n      resolve();\n    });\n  });\n\n  const jourSondageDel = new Promise(function (resolve) {\n    JourSondage.drop().then(() => {\n      console.log('table jour sondage supprimée');\n      resolve();\n    });\n  });\n\n  Promise.all([commentaireDel, reponseDel, jourSondageDel]).then(() => {\n    const questionDel = new Promise(function (resolve) {\n      Question.drop().then(() => {\n        console.log('table question supprimée');\n        resolve();\n      });\n    });\n    const remplissageDel = new Promise(function (resolve) {\n      Remplissage.drop().then(() => {\n        console.log('table remplissage supprimée');\n        resolve();\n      });\n    });\n    Promise.all([questionDel, remplissageDel]).then(() => {\n      const thematiqueDel = new Promise(function (resolve) {\n        Thematique.drop().then(() => {\n          console.log('table thematique supprimée');\n          resolve();\n        });\n      });\n      const userDel = new Promise(function (resolve) {\n        User.drop().then(() => {\n          console.log('table user supprimée');\n          resolve();\n        });\n      });\n      Promise.all([thematiqueDel, userDel]).then(() => {\n        Sondage.drop().then(() => {\n          console.log('table sondage supprimée');\n          Admin.drop().then(() => {\n            console.log('table admin supprimée');\n            console.log(\" -- anciennes tables supprimées, création des nouvelles --\");\n            creationTable();\n          });\n        });\n      });\n    });\n  });\n};\n\nsetupTables();\n"],"file":"setup.js"}