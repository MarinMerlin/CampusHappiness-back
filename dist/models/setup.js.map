{"version":3,"sources":["../../models/setup.js"],"names":["Models","require","Sondage","Thematique","User","Reponse","Question","Remplissage","JourSondage","Commentaire","Keyword","Group","Post","sync","force","then","console","log","creationTable","Promise","resolveAll","create","id","author","createdAt","Date","now","name","sondage_id","firstName","lastName","email","pseudo","salt","hash","auth","photo","lastMailDate","mailIntensity","group_id","date_emmission","nombre_emission","valeur","thematique_id","keyWord","user_id","date","remplissage_id","commentaire","question_id","suppressionTables","commentaireDel","resolve","drop","reponseDel","jourSondageDel","keywordDel","all","questionDel","remplissageDel","thematiqueDel","userDel","setupTables","delReponse","findOne","elem","destroy","delKeyword","delCommentaire","delJourSondage","delQuestion","delRemplissage","delThematique","delSondage","delUser","delGroup","clearTable","promises","push","module","exports"],"mappings":"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","sourcesContent":["const Models = require(\"./index\");\n\nconst { \n  Sondage, \n  Thematique, \n  User, \n  Reponse, \n  Question, \n  Remplissage, \n  JourSondage, \n  Commentaire, \n  Keyword, \n  Group,\n  Post, \n} = Models;\n\n\nPost.sync({ force: true }).then(() => { console.log(\"sync true $$$$$$$\"); });\n\nconst creationTable = function () {\n  return new Promise(function (resolveAll) {\n    Sondage.sync({ force: true }).then(() => {\n      Sondage.create({\n        id: \"fake_sondage_id\",\n        author: \"fake_author\",\n        createdAt: Date.now(),\n        name: \"fake_name\",\n      });\n    }).then(() => {\n      Group.sync({ force: true }).then(() => {\n        Group.create({\n          id: \"fake_group_id\",\n          name: \"fake_group_name\",\n          sondage_id: \"fake_sondage_id\",\n        });\n      }).then(() => {\n        User.sync({ force: true }).then(() => {\n          User.create({\n            id: \"fake_user_id\",\n            firstName: \"fake_first_name\",\n            lastName: \"fake_last_name\",\n            email: \"fake_user_email@fake_mail.bite\",\n            pseudo: \"fake_pseudo\",\n            salt: \"fake_salt\",\n            hash: \"fake_hash\",\n            auth: 0,\n            photo: \"./public/user/photo/default.jpg\",\n            lastMailDate: Date.now(),\n            mailIntensity: 1,\n            group_id: 'fake_group_id',\n          });\n        }).then(() => {\n          JourSondage.sync({ force: true }).then(() => {\n            JourSondage.create({\n              id: \"fake_jour_sondage_id\",\n              sondage_id: \"fake_sondage_id\",\n              date_emmission: Date.now(),\n              nombre_emission: 1,\n            });\n          });\n          Thematique.sync({ force: true }).then(() => {\n            Thematique.create({\n              id: \"fake_thematique_id\",\n              name: \"fake_name\",\n            });\n          }).then(() => {\n            Question.sync({ force: true }).then(() => {\n              Question.create({\n                id: \"fake_question_id\",\n                sondage_id: \"fake_sondage_id\",\n                valeur: \"fake_question\",\n                thematique_id: \"fake_thematique_id\",\n                keyWord: \"fake_keyWord\",\n              });\n            }).then(() => {\n              Remplissage.sync({ force: true }).then(() => {\n                Remplissage.create({\n                  id: \"fake_remplissage_id\",\n                  sondage_id: \"fake_sondage_id\",\n                  user_id: \"fake_user_id\",\n                  date: Date.now(),\n                });\n              }).then(() => {\n                Commentaire.sync({ force: true }).then(() => {\n                  Commentaire.create({\n                    id: \"fake_commentaire_id\",\n                    remplissage_id: \"fake_remplissage_id\",\n                    thematique_id: \"fake_thematique_id\",\n                    commentaire: \"fake_commentaire\",\n                  });\n                }).then(() => {\n                  Reponse.sync({ force: true }).then(() => {\n                    Reponse.create({\n                      id: \"fake_reponse_id\",\n                      remplissage_id: \"fake_remplissage_id\",\n                      question_id: \"fake_question_id\",\n                      valeur: 0,\n                    });\n                  }).then(() => {\n                    Keyword.sync({ force: true }).then(() => {\n                      Keyword.create({\n                        id: \"fake_keyword_id\",\n                        name: \"fake_keyword_name\",\n                      });\n                    }).then(() => {\n                      console.log(\"tables créées\");\n                      resolveAll();\n                    });\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n};\n\nconst suppressionTables = function () {\n  return new Promise(function (resolveAll) {\n    const commentaireDel = new Promise(function (resolve) {\n      Commentaire.drop().then(() => {\n        resolve();\n      });\n    });\n      \n    const reponseDel = new Promise(function (resolve) {\n      Reponse.drop().then(() => {\n        resolve();\n      });\n    });\n      \n    const jourSondageDel = new Promise(function (resolve) {\n      JourSondage.drop().then(() => {\n        resolve();\n      });\n    });\n\n    const keywordDel = new Promise(function (resolve) {\n      Keyword.drop().then(() => {\n        resolve();\n      });\n    });\n      \n    Promise.all([commentaireDel, reponseDel, jourSondageDel, keywordDel]).then(() => {\n      const questionDel = new Promise(function (resolve) {\n        Question.drop().then(() => {\n          resolve();\n        });\n      });\n      const remplissageDel = new Promise(function (resolve) {\n        Remplissage.drop().then(() => {\n          resolve();\n        });\n      });\n      Promise.all([questionDel, remplissageDel]).then(() => {\n        const thematiqueDel = new Promise(function (resolve) {\n          Thematique.drop().then(() => {\n            resolve();\n          });\n        });\n        const userDel = new Promise(function (resolve) {\n          User.drop().then(() => {\n            resolve();\n          });\n        });\n        Promise.all([thematiqueDel, userDel]).then(() => {\n          Group.drop().then(() => {\n            Sondage.drop().then(() => {\n              console.log(\" -- anciennes tables supprimées --\");\n              resolveAll();\n            });\n          });\n        });\n      });\n    });\n  });\n};\n\nconst setupTables = function () {\n  return new Promise(function (resolve) {\n    suppressionTables().then(() => {\n      creationTable().then(() => {\n        resolve();\n      });\n    });\n  });\n};\n\nconst delReponse = function () {\n  return new Promise(function (resolve) {\n    Reponse.findOne().then((elem) => {\n      elem.destroy().then(resolve);\n    });\n  });\n};\n\nconst delKeyword = function () {\n  return new Promise(function (resolve) {\n    Keyword.findOne().then((elem) => {\n      elem.destroy().then(resolve);\n    });\n  });\n};\n\nconst delCommentaire = function () {\n  return new Promise(function (resolve) {\n    Commentaire.findOne().then((elem) => {\n      elem.destroy().then(resolve);\n    });\n  });\n};\n\nconst delJourSondage = function () {\n  return new Promise(function (resolve) {\n    JourSondage.findOne().then((elem) => {\n      elem.destroy().then(resolve);\n    });\n  });\n};\n\nconst delQuestion = function () {\n  return new Promise(function (resolve) {\n    Question.findOne().then((elem) => {\n      elem.destroy().then(resolve);\n    });\n  });\n};\nconst delRemplissage = function () {\n  return new Promise(function (resolve) {\n    Remplissage.findOne().then((elem) => {\n      elem.destroy().then(resolve);\n    });\n  });\n};\n\nconst delThematique = function () {\n  return new Promise(function (resolve) {\n    Thematique.findOne().then((elem) => {\n      elem.destroy().then(resolve);\n    });\n  });\n};\nconst delSondage = function () {\n  return new Promise(function (resolve) {\n    Sondage.findOne().then((elem) => {\n      elem.destroy().then(resolve);\n    });\n  });\n};\n\nconst delUser = function () {\n  return new Promise(function (resolve) {\n    User.findOne().then((elem) => {\n      elem.destroy().then(resolve);\n    });\n  });\n};\n\nconst delGroup = function () {\n  return new Promise(function (resolve) {\n    Group.findOne().then((elem) => {\n      elem.destroy().then(resolve);\n    });\n  });\n};\n\nconst clearTable = function () {\n  return new Promise(function (resolve) {\n    setupTables().then(() => {\n      let promises = [];\n      promises.push(delReponse(), delCommentaire(), delJourSondage(), delKeyword());\n      Promise.all(promises).then(() => {\n        promises = [delQuestion(), delRemplissage()];\n        Promise.all(promises).then(() => {\n          promises = [delUser()];\n          Promise.all(promises).then(() => {\n            promises = [delGroup()];\n            Promise.all(promises).then(() => {\n              promises = [delThematique(), delSondage()];\n              Promise.all(promises).then(() => {\n                console.log(\"Tables nettoyées\");\n                resolve();\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n};\n\nmodule.exports = clearTable;"],"file":"setup.js"}