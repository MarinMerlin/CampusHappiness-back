{"version":3,"sources":["../../models/setup.js"],"names":["Models","require","Sondage","Thematique","User","Reponse","Question","Remplissage","Admin","JourSondage","Commentaire","creationTable","Promise","resolveAll","sync","force","then","create","id","pseudo","salt","hash","createdAt","Date","now","firstName","lastName","email","lastMailDate","mailIntensity","author","name","current","sondage_id","date_emmission","nombre_emission","valeur","thematique_id","keyWord","user_id","date","remplissage_id","commentaire","question_id","console","log","suppressionTables","commentaireDel","resolve","drop","reponseDel","jourSondageDel","all","questionDel","remplissageDel","thematiqueDel","userDel"],"mappings":"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","sourcesContent":["const Models = require(\"./index\");\n\nconst { \n  Sondage, Thematique, User, Reponse, Question, Remplissage, Admin, JourSondage, Commentaire,\n} = Models;\n\nconst creationTable = function () {\n  return new Promise(function (resolveAll) {\n    Admin.sync({ force: true }).then(() => {\n      Admin.create({\n        id: \"fake_admin_id\",\n        pseudo: \"fake_pseudo\",\n        salt: \"fake_salt\",\n        hash: \"fake_hash\",\n        createdAt: Date.now(),\n      });\n    }).then(() => {\n      User.sync({ force: true }).then(() => {\n        User.create({\n          id: \"fake_user_id\",\n          firstName: \"fake_first_name\",\n          lastName: \"fake_last_name\",\n          email: \"fake_user_email@fake_mail.bite\",\n          lastMailDate: Date.now(),\n          mailIntensity: 1,\n        });\n      }).then(() => {\n        Sondage.sync({ force: true }).then(() => {\n          Sondage.create({\n            id: \"fake_sondage_id\",\n            author: \"fake_author\",\n            createdAt: Date.now(),\n            name: \"fake_name\",\n            current: true,\n          });\n        }).then(() => {\n          JourSondage.sync({ force: true }).then(() => {\n            JourSondage.create({\n              id: \"fake_jour_sondage_id\",\n              sondage_id: \"fake_sondage_id\",\n              date_emmission: Date.now(),\n              nombre_emission: 1,\n            });\n          });\n          Thematique.sync({ force: true }).then(() => {\n            Thematique.create({\n              id: \"fake_thematique_id\",\n              name: \"fake_name\",\n            });\n          }).then(() => {\n            Question.sync({ force: true }).then(() => {\n              Question.create({\n                id: \"fake_question_id\",\n                sondage_id: \"fake_sondage_id\",\n                valeur: \"fake_question\",\n                thematique_id: \"fake_thematique_id\",\n                keyWord: \"fake_keyWord\",\n              });\n            }).then(() => {\n              Remplissage.sync({ force: true }).then(() => {\n                Remplissage.create({\n                  id: \"fake_remplissage_id\",\n                  sondage_id: \"fake_sondage_id\",\n                  user_id: \"fake_user_id\",\n                  date: Date.now(),\n                });\n              }).then(() => {\n                Commentaire.sync({ force: true }).then(() => {\n                  Commentaire.create({\n                    id: \"fake_commentaire_id\",\n                    remplissage_id: \"fake_remplissage_id\",\n                    thematique_id: \"fake_thematique_id\",\n                    commentaire: \"fake_commentaire\",\n                  });\n                }).then(() => {\n                  Reponse.sync({ force: true }).then(() => {\n                    Reponse.create({\n                      id: \"fake_reponse_id\",\n                      remplissage_id: \"fake_remplissage_id\",\n                      question_id: \"fake_question_id\",\n                      valeur: 0,\n                    });\n                  }).then(() => {\n                    console.log(\"tables créées\");\n                    resolveAll();\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n};\n\nconst suppressionTables = function () {\n  return new Promise(function (resolveAll) {\n    const commentaireDel = new Promise(function (resolve) {\n      Commentaire.drop().then(() => {\n        resolve();\n      });\n    });\n      \n    const reponseDel = new Promise(function (resolve) {\n      Reponse.drop().then(() => {\n        resolve();\n      });\n    });\n      \n    const jourSondageDel = new Promise(function (resolve) {\n      JourSondage.drop().then(() => {\n        resolve();\n      });\n    });\n      \n    Promise.all([commentaireDel, reponseDel, jourSondageDel]).then(() => {\n      const questionDel = new Promise(function (resolve) {\n        Question.drop().then(() => {\n          resolve();\n        });\n      });\n      const remplissageDel = new Promise(function (resolve) {\n        Remplissage.drop().then(() => {\n          resolve();\n        });\n      });\n      Promise.all([questionDel, remplissageDel]).then(() => {\n        const thematiqueDel = new Promise(function (resolve) {\n          Thematique.drop().then(() => {\n            resolve();\n          });\n        });\n        const userDel = new Promise(function (resolve) {\n          User.drop().then(() => {\n            resolve();\n          });\n        });\n        Promise.all([thematiqueDel, userDel]).then(() => {\n          Sondage.drop().then(() => {\n            Admin.drop().then(() => {\n              console.log(\" -- anciennes tables supprimées --\");\n              resolveAll();\n            });\n          });\n        });\n      });\n    });\n  });\n};\n\nsuppressionTables().then(() => {\n  creationTable().then(() => {\n    console.log(\"tables mises à jours\");\n  });\n});\n"],"file":"setup.js"}