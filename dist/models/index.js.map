{"version":3,"sources":["../../models/index.js"],"names":["Sequelize","require","env","id_generator","Op","userConstructor","adminConstructor","jourSondageConstructor","questionConstructor","remplissageConstructor","reponseConstructor","sondageConstructor","thematiqueConstructor","commentaireConstructor","sequelize","database","username","password","host","dialect","operatorsAliases","logging","pool","max","min","acquire","idle","User","Admin","JourSondage","Question","Remplissage","Reponse","Sondage","Thematique","Commentaire","belongsTo","foreignKey","targetKey","prototype","getSondage","Promise","resolve","sondageList","findAll","then","sondages","include","model","questions","forEach","sondage","thematiqueList","question","dataValues","sondage_id","id","thema","filter","thematique","thematique_id","length","questionList","push","valeur","name","current","addThematiqueId","thematiqueListWithId","thematiqueWithId","createSondage","addSondage","pseudo","Date","now","promises","addThematique","all","addQuestion","text","keyWord","getStatisticsSpecific","day","resolveAll","currentDate","findOne","where","date_emmission","jourSondage","thematiqueIdList","remplissageIdList","sondage_name","questionListFound","console","log","includes","remplissageListFound","remplissage","reponseList","or","thematiqueListFound","remplissage_id","reponses","reponse","sondageMap","Map","thematiqueMap","set","thematiqueName","questionMap","questionToThematique","get","sum","numberAnswer","thematiqueId","question_id","sondageResult","thematiqueObject","questionObject","avg","getStatistics","next","statistics","monthSentSondage","monthAnsweredSondage","totalSentSondage","totalAnsweredSondage","totalRate","totalSatis","todayAnsweredSendedRate","todayAverageSatisfaction","monthAverageSatisfaction","weekRate","getTotalAnsweredSondage","count","total","getTotalSentSondage","getTotalRate","data","rate","parseFloat","toFixed","getTotalSatis","val","getJourSentSondage","jour","jourDate","toLocaleDateString","jsondage","nombre_emission","getJourAnsweredSondage","date","nb","getMonthSentSondage","intPromises","i","getMonthAnsweredSondage","getDayStatis","reps","satisfaction","rep","getDayRate","Number","getTodayStatis","getTodayRate","getMonthStatis","getWeekRate","statisticTab","findSondage","req","user","serverResponse","alreadyAnswered","quest","JSON","parse","stringify","newList","elem","commentaires","sondageName","commentaireList","commentaire","answerSondage","simulationDate","addRemplissage","answered_questions","question_answer","addReponse","answer","answered_commentaires","commentaire_answer","addCommentaire","updateSondage","updateReponse","comment","updateCommentaire","Models","module","exports"],"mappings":"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","sourcesContent":["const Sequelize = require('sequelize');\nconst env = require('../const');\nconst id_generator = require('../custom_module/id_generator');\n// const getCommentaire = require('./dataFetch').getCommentaire;\n\nconst Op = Sequelize.Op;\n\n// models constructors\nconst userConstructor = require('./constructor/user');\nconst adminConstructor = require('./constructor/admin');\nconst jourSondageConstructor = require('./constructor/jourSondage');\nconst questionConstructor = require('./constructor/question');\nconst remplissageConstructor = require('./constructor/remplissage');\nconst reponseConstructor = require('./constructor/reponse');\nconst sondageConstructor = require('./constructor/sondage');\nconst thematiqueConstructor = require('./constructor/thematique');\nconst commentaireConstructor = require('./constructor/commentaire');\n\n// sequelize connection\nconst sequelize = new Sequelize(env.database, env.username, env.password, {\n  host: env.host,\n  dialect: 'mysql',\n  operatorsAliases: false,\n  logging: false,\n  pool: {\n    max: 5,\n    min: 0,\n    acquire: 30000,\n    idle: 10000,\n  },\n});\n\n// Models\nconst User = userConstructor(sequelize);\nconst Admin = adminConstructor(sequelize);\nconst JourSondage = jourSondageConstructor(sequelize);\nconst Question = questionConstructor(sequelize);\nconst Remplissage = remplissageConstructor(sequelize);\nconst Reponse = reponseConstructor(sequelize);\nconst Sondage = sondageConstructor(sequelize);\nconst Thematique = thematiqueConstructor(sequelize);\nconst Commentaire = commentaireConstructor(sequelize);\n\n// // Foreign keys\nQuestion.belongsTo(Sondage, { foreignKey: 'sondage_id', targetKey: 'id' });\nJourSondage.belongsTo(Sondage, { foreignKey: 'sondage_id', targetKey: 'id' });\nReponse.belongsTo(Question, { foreignKey: 'question_id', targetKey: 'id' });\nReponse.belongsTo(Remplissage, { foreignKey: 'remplissage_id', targetKey: 'id' });\nRemplissage.belongsTo(Sondage, { foreignKey: 'sondage_id', targetKey: 'id' });\nRemplissage.belongsTo(User, { foreignKey: 'user_id', targetKey: 'id' });\nQuestion.belongsTo(Thematique, { foreignKey: 'thematique_id', targetKey: 'id' });\nCommentaire.belongsTo(Thematique, { foreignKey: 'thematique_id', targetKey: 'id' });\nCommentaire.belongsTo(Remplissage, { foreignKey: 'remplissage_id', targetKey: 'id' });\n\n// Should change this function by using promises more\nAdmin.prototype.getSondage = function () {\n  return new Promise((resolve) => {\n    const sondageList = [];\n    Sondage.findAll().then((sondages) => {\n      Question.findAll({\n        include: [{\n          model: Thematique,\n        }],\n      }).then((questions) => {\n        sondages.forEach((sondage) => {\n          const thematiqueList = [];\n          questions.forEach((question) => {\n            if (question.dataValues.sondage_id === sondage.dataValues.id) {\n              const thema = thematiqueList.filter(\n                thematique => thematique.id === question.dataValues.thematique_id,\n              );\n              if (thema.length > 0) {\n                thema[0].questionList.push({\n                  id: question.dataValues.id, \n                  question: question.dataValues.valeur,\n                });\n              } else {\n                thematiqueList.push({\n                  id: question.dataValues.thematique_id,\n                  name: question.dataValues.thematique.dataValues.name,\n                  questionList: [{\n                    id: question.dataValues.id, \n                    question: question.dataValues.valeur,\n                  }],\n                });\n              }\n            }\n          });\n          sondageList.push({\n            id: sondage.dataValues.id, \n            name: sondage.dataValues.name,\n            thematiqueList: thematiqueList,\n            current: sondage.dataValues.current,\n          });\n        });\n        resolve(sondageList);\n      });\n    });\n  });\n};\n\nconst addThematiqueId = function (thematiqueList, thematiqueListWithId) {\n  thematiqueList.forEach((thematique) => {\n    thematiqueListWithId.forEach((thematiqueWithId) => {\n      if (thematiqueWithId.name === thematique.name) {\n        thematique.id = thematiqueWithId.id;\n      }\n    });\n  });\n  return thematiqueList;\n};\n\nAdmin.prototype.createSondage = function (sondage) {\n  return new Promise((resolve) => {\n    const sondage_id = id_generator();\n    Sondage.addSondage(sondage_id, this.pseudo, Date.now(), sondage.name).then(() => {\n      let promises = [];\n      sondage.thematiqueList.forEach((thematique) => {\n        promises.push(Thematique.addThematique(thematique.name));\n      });\n      Promise.all(promises).then((thematiqueListWithId) => {\n        addThematiqueId(sondage.thematiqueList, thematiqueListWithId);\n        promises = [];\n        sondage.thematiqueList.forEach((thematique) => {\n          thematique.questionList.forEach((question) => {\n            promises.push(Question.addQuestion(\n              sondage_id, thematique.id, question.text, question.keyWord,\n            ));\n          });\n        });\n        Promise.all(promises).then(() => { resolve(sondage_id); });\n      });\n    });\n  });\n};\n\nAdmin.prototype.getStatisticsSpecific = function (day) {\n  return new Promise(function (resolveAll) {\n    const currentDate = new Date();\n    JourSondage.findOne({ where: { date_emmission: currentDate } }).then((jourSondage) => {\n      const sondage_id = jourSondage.dataValues.sondage_id;\n      const questionList = [];\n      const thematiqueIdList = [];\n      const remplissageIdList = [];\n      let sondage_name = null;\n      let promises = [];\n      promises.push(new Promise(function (resolve) {\n        Question.findAll({ where: { sondage_id: sondage_id } }).then((questionListFound) => {\n          console.log(questionListFound.length);\n          questionListFound.forEach((question) => {\n            questionList.push(question.dataValues);\n            if (!thematiqueIdList.includes(question.dataValues.thematique_id)) {\n              thematiqueIdList.push(question.dataValues.thematique_id);\n            }\n          });\n          resolve();\n        });\n      }));\n      promises.push(new Promise(function (resolve) {\n        Remplissage.findAll({ where: { sondage_id: sondage_id } }).then((remplissageListFound) => {\n          console.log(remplissageListFound.length);\n          remplissageListFound.forEach((remplissage) => {\n            remplissageIdList.push(remplissage.dataValues.id);\n          });\n          resolve();\n        });\n      }));\n      promises.push(new Promise(function (resolve) {\n        Sondage.findOne({ where: { id: sondage_id } }).then((sondage) => {\n          sondage_name = sondage.dataValues.name;\n          resolve();\n        });\n      }));\n      Promise.all(promises).then(() => {\n        promises = [];\n        const thematiqueList = [];\n        const reponseList = [];\n        promises.push(new Promise(function (resolve) {\n          Thematique.findAll({ where: { id: { [Op.or]: thematiqueIdList } } }).then((thematiqueListFound) => {\n            thematiqueListFound.forEach((thematique) => {\n              thematiqueList.push(thematique.dataValues);\n            });\n            resolve();\n          });\n        }));\n        promises.push(new Promise(function (resolve) {\n          Reponse.findAll({ where: { remplissage_id: { [Op.or]: remplissageIdList } } }).then(((reponses) => {\n            reponses.forEach((reponse) => {\n              reponseList.push(reponse.dataValues);\n            });\n            resolve();\n          }));\n        }));\n        Promise.all(promises).then(() => {\n          // thematiqueId --> { thematiqueName, questionMap }\n          // questionMap: questionId --> { keyWord, sum, numberAnswer } \n          const sondageMap = new Map();\n          // thematiqueId -->  name \n          const thematiqueMap = new Map();\n          thematiqueList.forEach((thematique) => {\n            thematiqueMap.set(thematique.id, thematique.name);\n            sondageMap.set(thematique.id, { thematiqueName: thematique.name, questionMap: new Map() });\n          });\n          // question ID --> thematiqueId\n          const questionToThematique = new Map();\n          questionList.forEach((question) => {\n            questionToThematique.set(question.id, question.thematique_id);\n            sondageMap.get(question.thematique_id).questionMap.set(question.id, { keyWord: question.keyWord, sum: 0, numberAnswer: 0 });\n          });\n          reponseList.forEach((reponse) => {\n            const thematiqueId = questionToThematique.get(reponse.question_id);\n            sondageMap.get(thematiqueId).questionMap.get(reponse.question_id).sum += reponse.valeur;\n            sondageMap.get(thematiqueId).questionMap.get(reponse.question_id).numberAnswer += 1;\n          });\n          const sondageResult = {\n            thematiqueList: [],\n          };\n          sondageMap.forEach((thematiqueObject) => {\n            const thematique = {\n              name: thematiqueObject.thematiqueName,\n              questionList: [],\n            };\n            thematiqueObject.questionMap.forEach((questionObject) => {\n              thematique.questionList.push({\n                keyWord: questionObject.keyWord,\n                avg: questionObject.sum / (questionObject.numberAnswer || 1),\n              });\n            });\n            sondageResult.thematiqueList.push(thematique);\n          });\n          resolveAll(sondageResult);\n        });\n      });\n    });\n  });\n};\n\nAdmin.prototype.getStatistics = function (next) {\n  const statistics = {\n    monthSentSondage: [], // fait\n    monthAnsweredSondage: [], // fait\n    totalSentSondage: 0, // fait\n    totalAnsweredSondage: 0, // fait\n    totalRate: 0,\n    totalSatis: 0,\n    todayAnsweredSendedRate: 0, // fait\n    todayAverageSatisfaction: 0, // fait\n    monthAverageSatisfaction: [], // fait\n    weekRate: [],\n\n  };\n  \n  const getTotalAnsweredSondage = new Promise(function (resolve) {\n    Remplissage.count().then((total) => {\n      resolve(total);\n    });\n  });\n\n  const getTotalSentSondage = new Promise(function (resolve) {\n    JourSondage.sum('nombre_emission').then((total) => {\n      resolve(total);\n    });\n  });\n\n  const getTotalRate = new Promise((resolve) => {\n    Promise.all([getTotalAnsweredSondage, getTotalSentSondage])\n      .then(((data) => {\n        const rate = parseFloat((data[0] / data[1]).toFixed(3));\n        resolve(rate);\n      }));\n  });\n\n  const getTotalSatis = new Promise((resolve) => {\n    Reponse.sum('valeur').then((val) => {\n      Reponse.count().then(total => resolve(parseFloat((val / total).toFixed(3))));\n    });\n  });\n\n  const getJourSentSondage = jour => new Promise((resolve) => {\n    const jourDate = new Date(jour).toLocaleDateString();\n    JourSondage.findOne({ where: { date_emmission: jour } }).then((jsondage) => {\n      if (jsondage) {\n        console.log(\"On \", jourDate, \", \", jsondage.dataValues.nombre_emission, \" mails were sent.\");\n        resolve(jsondage.dataValues.nombre_emission);\n      } else {\n        console.log(\"No mail sent on: \", jourDate);\n        resolve(0);\n      }\n    });\n  });\n\n  const getJourAnsweredSondage = jour => new Promise((resolve) => {\n    const jourDate = new Date(jour).toLocaleDateString();\n    Remplissage.count({ where: { date: jour } }).then((nb) => {\n      console.log(\"On \", jourDate, \", \", nb, \" sondage were answered.\");\n      resolve(nb);\n    });\n  });\n\n  const getMonthSentSondage = new Promise((resolve) => {\n    const intPromises = [];\n    for (let i = 0; i < 31; i++) {\n      intPromises.push(getJourSentSondage(Date.now() - (86400000 * i)));\n    }\n    Promise.all(intPromises).then((data) => {\n      resolve(data);\n    });\n  });\n\n  const getMonthAnsweredSondage = new Promise((resolve) => {\n    const intPromises = [];\n    for (let i = 0; i < 31; i++) {\n      intPromises.push(getJourAnsweredSondage(Date.now() - (86400000 * i)));\n    }\n    Promise.all(intPromises).then((data) => {\n      resolve(data);\n    });\n  });\n\n  const getDayStatis = jour => new Promise((resolve) => {\n    Reponse.findAll({\n      include: [{\n        model: Remplissage,\n        where: { date: jour },\n      }],\n    }).then((reps) => {\n      if (reps.length > 0) {\n        let satisfaction = 0;\n        reps.forEach((rep) => {\n          satisfaction += rep.dataValues.valeur;\n        });\n        resolve(parseFloat((satisfaction / reps.length).toFixed(3)));\n      } else {\n        resolve(0);\n      }\n    });\n  });\n  \n  const getDayRate = jour => new Promise((resolve) => {\n    Promise.all([getJourAnsweredSondage(jour), getJourSentSondage(jour)])\n      .then(((data) => {\n        console.log(data);\n        let rate = Number;\n        if (data[1] !== 0) {\n          rate = parseFloat((data[0] / data[1]).toFixed(3));\n        } else {\n          rate = 0;\n        }\n        resolve(rate);\n      }));\n  });\n\n  const getTodayStatis = new Promise((resolve) => {\n    getDayStatis(Date.now()).then(data => resolve(data));\n  });\n\n  const getTodayRate = new Promise((resolve) => {\n    getDayRate(Date.now()).then(data => resolve(data));\n  });\n\n  const getMonthStatis = new Promise((resolve) => {\n    const intPromises = [];\n    for (let i = 0; i < 31; i++) {\n      intPromises.push(getDayStatis(Date.now() - (86400000 * i)));\n    }\n    Promise.all(intPromises).then((data) => {\n      resolve(data);\n    });\n  });\n\n  const getWeekRate = new Promise((resolve) => {\n    const intPromises = [];\n    for (let i = 0; i < 8; i++) {\n      intPromises.push(getDayRate(Date.now() - (86400000 * i)));\n    }\n    Promise.all(intPromises).then((data) => {\n      resolve(data);\n    });\n  });\n\n  Promise.all([\n    getTotalAnsweredSondage,\n    getTotalSentSondage,\n    getTotalRate,\n    getTotalSatis,\n    getMonthSentSondage,\n    getMonthAnsweredSondage,\n    getTodayRate,\n    getTodayStatis,\n    getMonthStatis,\n    getWeekRate,\n  ]).then((statisticTab) => {\n    const [\n      totalAnsweredSondage, \n      totalSentSondage, \n      totalRate,\n      totalSatis,\n      monthSentSondage, \n      monthAnsweredSondage,\n      todayAnsweredSendedRate,\n      todayAverageSatisfaction,\n      monthAverageSatisfaction,\n      weekRate,\n    ] = statisticTab;\n    next({\n      totalSentSondage: totalSentSondage,\n      totalAnsweredSondage: totalAnsweredSondage,\n      totalRate: totalRate,\n      totalSatis: totalSatis,\n      monthSentSondage: monthSentSondage,\n      monthAnsweredSondage: monthAnsweredSondage,\n      todayAnsweredSendedRate: todayAnsweredSendedRate,\n      todayAverageSatisfaction: todayAverageSatisfaction,\n      monthAverageSatisfaction: monthAverageSatisfaction,\n      weekRate: weekRate,\n    });\n  });\n};\n\nUser.prototype.findSondage = function (req) {\n  return new Promise((resolve) => {\n    const { sondage_id, remplissage_id } = req.user;\n    const serverResponse = { alreadyAnswered: false };\n    Remplissage.findOne({ where: { id: remplissage_id } }).then((remplissage) => {\n      Question.findAll({\n        include: [{\n          model: Thematique,\n        }],\n        where: { sondage_id: sondage_id }, \n      }).then((questions) => {\n        const questionList = [];\n        const thematiqueList = new Map();\n        questions.forEach((question) => {\n          const quest = JSON.parse(JSON.stringify(question));\n          delete quest.thematique;\n          if (!thematiqueList.get(question.dataValues.thematique.dataValues.id)) {\n            thematiqueList.set(\n              question.dataValues.thematique.dataValues.id, \n              question.dataValues.thematique.dataValues,\n            );\n          }\n          const newList = thematiqueList.get(question.dataValues.thematique.dataValues.id);\n          if (newList.questionList) {\n            newList.questionList.push(quest);\n          } else {\n            newList.questionList = [quest];\n          }\n          thematiqueList.set(question.dataValues.thematique.dataValues.id, newList); \n        });\n        thematiqueList.forEach((elem) => {\n          questionList.push(elem);\n        });\n        serverResponse.thematiqueList = questionList; \n\n        // Si le sondage a déjà été remplis, on renvois les réponses\n        if (remplissage) {\n          serverResponse.alreadyAnswered = true;\n          Reponse.findAll({ where: { remplissage_id: remplissage_id } }).then((reponses) => {\n            Sondage.findOne({ where: { id: sondage_id } }).then((sondage) => {\n              Commentaire.findAll({ where: { remplissage_id: remplissage_id } })\n                .then((commentaires) => {\n                  serverResponse.sondageName = sondage.dataValues.name;\n                  const reponseList = [];\n                  const commentaireList = [];\n                  reponses.forEach((reponse) => {\n                    reponseList.push(reponse);\n                  });\n                  commentaires.forEach((commentaire) => {\n                    commentaireList.push(commentaire);\n                  }); \n                  serverResponse.reponseList = reponseList;\n                  serverResponse.commentaireList = commentaireList;\n                  resolve(serverResponse);\n                });\n            });\n          }); \n        } else {\n          Sondage.findOne({ where: { id: sondage_id } }).then((sondage) => {\n            serverResponse.sondageName = sondage.dataValues.name;\n            resolve(serverResponse);\n          }); \n        }\n      }); \n    });\n  });\n};\n    \n// input\n// const sondage = {\n//   remlissage_id: \"...\"\n//   sondage_id: \"..\",\n//   answered_questions: [\n//     {\n//       question_id: \"...\",\n//       answer: \"...\",\n//     },\n//   answered_commentaires: [\n//     {\n//      thematique_id: \"...\",\n//      answer: \"...\",\n//     },\n//   ],\n// };\n// uniquement les questions auxquelles l'ut a repondue, pas de question sans reponses\nUser.prototype.answerSondage = function (sondage, simulationDate) {\n  const date = simulationDate || Date.now();\n  return new Promise((resolve) => {\n    const remplissage_id = sondage.remplissage_id;\n    const sondage_id = sondage.sondage_id;\n    Remplissage.addRemplissage(remplissage_id, sondage_id, this.id, date).then(() => {\n      const promises = [];\n      sondage.answered_questions.forEach((question_answer) => {\n        promises.push(\n          Reponse.addReponse(remplissage_id, question_answer.question_id, question_answer.answer),\n        );\n      });\n      sondage.answered_commentaires.forEach((commentaire_answer) => {\n        promises.push(\n          Commentaire.addCommentaire(\n            remplissage_id, commentaire_answer.thematique_id, commentaire_answer.answer,\n          ),\n        );\n      });\n      Promise.all(promises).then(() => {\n        resolve();\n      });\n    });\n  });\n};\n\nUser.prototype.updateSondage = function (sondage) {\n  return new Promise((resolve) => {\n    const remplissage_id = sondage.remplissage_id;\n    sondage.answered_questions.forEach((question) => {\n      Reponse.findOne({\n        where: { \n          remplissage_id: remplissage_id, \n          question_id: question.question_id,\n        }, \n      })\n        .then((reponse) => {\n          Reponse.updateReponse(reponse.dataValues.id, question.answer);\n        });\n    });\n    sondage.answered_commentaires.forEach((commentaire) => {\n      Commentaire.findOne({\n        where: {\n          remplissage_id: remplissage_id, \n          thematique_id: commentaire.thematique_id,\n        }, \n      })\n        .then((comment) => {\n          Commentaire.updateCommentaire(comment.dataValues.id, commentaire.answer);\n        });\n    });\n    resolve();\n  });\n};\n\nconst Models = {\n  User: User,\n  Admin: Admin,\n  Sondage: Sondage,\n  JourSondage: JourSondage,\n  Remplissage: Remplissage,\n  Question: Question,\n  Reponse: Reponse,\n  Thematique: Thematique,\n  Commentaire: Commentaire,\n};\n\nmodule.exports = Models;"],"file":"index.js"}