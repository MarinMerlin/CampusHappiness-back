{"version":3,"sources":["../../models/index.js"],"names":["Sequelize","require","env","id_generator","Op","userConstructor","jourSondageConstructor","questionConstructor","remplissageConstructor","reponseConstructor","sondageConstructor","thematiqueConstructor","commentaireConstructor","keywordConstructor","groupConstructor","sequelize","database","username","password","host","dialect","operatorsAliases","logging","pool","max","min","acquire","idle","User","JourSondage","Question","Remplissage","Reponse","Sondage","Thematique","Commentaire","Keyword","Group","belongsTo","foreignKey","targetKey","prototype","getSondage","Promise","resolve","sondageList","findAll","then","sondages","include","model","questions","forEach","sondage","thematiqueList","question","dataValues","sondage_id","id","thema","filter","thematique","thematique_id","length","questionList","push","valeur","name","getGroups","groupList","groups","group","addThematiqueId","thematiqueListWithId","thematiqueWithId","createSondage","addSondage","pseudo","Date","now","promises","addThematique","all","addQuestion","text","keyWord","updateSondage","findOne","where","getCommentairesJour","jour","date","commentaires","promiseList","commentaire","promise","resolveCom","user","firstName","lastName","email","remplissage","user_id","console","log","getStatisticsSpecific","searchDate","parseInt","year","month","day","resolveAll","date_emmission","jourSondage","thematiqueIdList","remplissageIdList","sondage_name","questionListFound","includes","remplissageListFound","reponseList","or","thematiqueListFound","remplissage_id","reponses","reponse","sondageMap","Map","thematiqueMap","set","thematiqueName","questionMap","questionToThematique","get","sum","numberAnswer","thematiqueId","question_id","sondageResult","thematiqueObject","questionObject","avg","getStatistics","next","statistics","monthSentSondage","monthAnsweredSondage","totalSentSondage","totalAnsweredSondage","totalRate","totalSatis","todayAnsweredSendedRate","todayAverageSatisfaction","monthAverageSatisfaction","weekRate","getTotalAnsweredSondage","count","total","getTotalSentSondage","getTotalRate","data","rate","parseFloat","toFixed","getTotalSatis","val","getJourSentSondage","jourDate","toLocaleDateString","jsondage","nombre_emission","getJourAnsweredSondage","nb","getMonthSentSondage","intPromises","i","getMonthAnsweredSondage","getDayStatis","reps","satisfaction","rep","getDayRate","Number","getTodayStatis","getTodayRate","getMonthStatis","getWeekRate","statisticTab","getUserStat","thematiques","themPromise","resolveThem","findSondage","req","serverResponse","alreadyAnswered","quest","JSON","parse","stringify","newList","elem","sondageName","commentaireList","answerSondage","simulationDate","addRemplissage","answered_questions","question_answer","addReponse","answer","answered_commentaires","commentaire_answer","addCommentaire","updateAnswer","updateReponse","comment","updateCommentaire","Models","module","exports"],"mappings":"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","sourcesContent":["const Sequelize = require('sequelize');\nconst env = require('../const');\nconst id_generator = require('../custom_module/id_generator');\n// const getCommentaire = require('./dataFetch').getCommentaire;\n\nconst Op = Sequelize.Op;\n\n// models constructors\nconst userConstructor = require('./constructor/user');\nconst jourSondageConstructor = require('./constructor/jourSondage');\nconst questionConstructor = require('./constructor/question');\nconst remplissageConstructor = require('./constructor/remplissage');\nconst reponseConstructor = require('./constructor/reponse');\nconst sondageConstructor = require('./constructor/sondage');\nconst thematiqueConstructor = require('./constructor/thematique');\nconst commentaireConstructor = require('./constructor/commentaire');\nconst keywordConstructor = require('./constructor/keyword');\nconst groupConstructor = require('./constructor/group');\n\n// sequelize connection\nconst sequelize = new Sequelize(env.database, env.username, env.password, {\n  host: env.host,\n  dialect: 'mysql',\n  operatorsAliases: false,\n  logging: false,\n  pool: {\n    max: 5,\n    min: 0,\n    acquire: 30000,\n    idle: 10000,\n  },\n});\n\n// Models\nconst User = userConstructor(sequelize);\nconst JourSondage = jourSondageConstructor(sequelize);\nconst Question = questionConstructor(sequelize);\nconst Remplissage = remplissageConstructor(sequelize);\nconst Reponse = reponseConstructor(sequelize);\nconst Sondage = sondageConstructor(sequelize);\nconst Thematique = thematiqueConstructor(sequelize);\nconst Commentaire = commentaireConstructor(sequelize);\nconst Keyword = keywordConstructor(sequelize);\nconst Group = groupConstructor(sequelize);\n\n// // Foreign keys\nQuestion.belongsTo(Sondage, { foreignKey: 'sondage_id', targetKey: 'id' });\nJourSondage.belongsTo(Sondage, { foreignKey: 'sondage_id', targetKey: 'id' });\nGroup.belongsTo(Sondage, { foreignKey: 'sondage_id', targetKey: 'id' });\nUser.belongsTo(Group, { foreignKey: 'group_id', targetKey: 'id' });\nReponse.belongsTo(Question, { foreignKey: 'question_id', targetKey: 'id' });\nReponse.belongsTo(Remplissage, { foreignKey: 'remplissage_id', targetKey: 'id' });\nRemplissage.belongsTo(Sondage, { foreignKey: 'sondage_id', targetKey: 'id' });\nRemplissage.belongsTo(User, { foreignKey: 'user_id', targetKey: 'id' });\nQuestion.belongsTo(Thematique, { foreignKey: 'thematique_id', targetKey: 'id' });\nCommentaire.belongsTo(Thematique, { foreignKey: 'thematique_id', targetKey: 'id' });\nCommentaire.belongsTo(Remplissage, { foreignKey: 'remplissage_id', targetKey: 'id' });\n\n// Should change this function by using promises more\nUser.prototype.getSondage = function () {\n  return new Promise((resolve) => {\n    const sondageList = [];\n    Sondage.findAll().then((sondages) => {\n      Question.findAll({\n        include: [{\n          model: Thematique,\n        }],\n      }).then((questions) => {\n        sondages.forEach((sondage) => {\n          const thematiqueList = [];\n          questions.forEach((question) => {\n            if (question.dataValues.sondage_id === sondage.dataValues.id) {\n              const thema = thematiqueList.filter(\n                thematique => thematique.id === question.dataValues.thematique_id,\n              );\n              if (thema.length > 0) {\n                thema[0].questionList.push({\n                  id: question.dataValues.id, \n                  question: question.dataValues.valeur,\n                });\n              } else {\n                thematiqueList.push({\n                  id: question.dataValues.thematique_id,\n                  name: question.dataValues.thematique.dataValues.name,\n                  questionList: [{\n                    id: question.dataValues.id, \n                    question: question.dataValues.valeur,\n                  }],\n                });\n              }\n            }\n          });\n          sondageList.push({\n            id: sondage.dataValues.id, \n            name: sondage.dataValues.name,\n            thematiqueList: thematiqueList,\n          });\n        });\n        resolve(sondageList);\n      });\n    });\n  });\n};\n\nUser.prototype.getGroups = function () {\n  return new Promise((resolve) => {\n    const groupList = [];\n    Group.findAll().then((groups) => {\n      groups.forEach((group) => {\n        groupList.push({ id: group.dataValues.id, name: group.dataValues.name });\n      });\n      resolve(groupList);\n    });\n  });\n};\n\nconst addThematiqueId = function (thematiqueList, thematiqueListWithId) {\n  thematiqueList.forEach((thematique) => {\n    thematiqueListWithId.forEach((thematiqueWithId) => {\n      if (thematiqueWithId.name === thematique.name) {\n        thematique.id = thematiqueWithId.id;\n      }\n    });\n  });\n  return thematiqueList;\n};\n\nUser.prototype.createSondage = function (sondage) {\n  return new Promise((resolve) => {\n    const sondage_id = id_generator();\n    Sondage.addSondage(sondage_id, this.pseudo, Date.now(), sondage.name).then(() => {\n      let promises = [];\n      sondage.thematiqueList.forEach((thematique) => {\n        promises.push(Thematique.addThematique(thematique.name));\n      });\n      Promise.all(promises).then((thematiqueListWithId) => {\n        addThematiqueId(sondage.thematiqueList, thematiqueListWithId);\n        promises = [];\n        sondage.thematiqueList.forEach((thematique) => {\n          thematique.questionList.forEach((question) => {\n            promises.push(Question.addQuestion(\n              sondage_id, thematique.id, question.text, question.keyWord,\n            ));\n          });\n        });\n        Promise.all(promises).then(() => { resolve(sondage_id); });\n      });\n    });\n  });\n};\n\nUser.prototype.updateSondage = function (sondage, id) {\n  return new Promise((resolve) => {\n    Sondage.findOne({ where: { id: id } }).then(() => {\n      let promises = [];\n      sondage.thematiqueList.forEach((thematique) => {\n        promises.push(Thematique.addThematique(thematique.name));\n      });\n      Promise.all(promises).then((thematiqueListWithId) => {\n        addThematiqueId(sondage.thematiqueList, thematiqueListWithId);\n        promises = [];\n        sondage.thematiqueList.forEach((thematique) => {\n          thematique.questionList.forEach((question) => {\n            promises.push(Question.addQuestion(\n              id, thematique.id, question.text, question.keyWord,\n            ));\n          });\n        });\n        Promise.all(promises).then(() => { resolve(id); });\n      });\n    });\n  });\n};\n\nUser.prototype.getCommentairesJour = function (jour) {\n  return new Promise((resolve) => {\n    Commentaire.findAll({\n      include: [{\n        model: Remplissage,\n        where: { date: jour },\n      },\n      {\n        model: Thematique,\n      },\n      ],\n    }).then((commentaires) => {\n      const promiseList = [];\n      commentaires.forEach((commentaire) => {\n        const promise = new Promise((resolveCom) => {\n          commentaire.dataValues.user = {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n          };\n          User.findOne({ where: { id: commentaire.dataValues.remplissage.dataValues.user_id } })\n            .then((user) => {\n              commentaire.dataValues.user.firstName = user.dataValues.firstName;\n              commentaire.dataValues.user.lastName = user.dataValues.lastName;\n              commentaire.dataValues.user.email = user.dataValues.email;\n              resolveCom();\n            });\n        });\n        promiseList.push(promise);\n      });\n      Promise.all(promiseList).then(() => {\n        console.log(\"Commentaire for \", jour, \" found.\");\n        resolve(commentaires);\n      });\n    });\n  });\n};\n\nUser.prototype.getStatisticsSpecific = function (date) {\n  const searchDate = new Date(parseInt(date.year, 10), parseInt(date.month, 10) - 1, parseInt(date.day, 10));\n  return new Promise(function (resolveAll) {\n    JourSondage.findOne({ where: { date_emmission: searchDate } }).then((jourSondage) => {\n      if (!jourSondage) {\n        resolveAll(\"no sondage this day...\");\n      } else {\n        const sondage_id = jourSondage.dataValues.sondage_id;\n        console.log(sondage_id);\n        const questionList = [];\n        const thematiqueIdList = [];\n        const remplissageIdList = [];\n        let sondage_name = null;\n        let promises = [];\n        promises.push(new Promise(function (resolve) {\n          Question.findAll({ where: { sondage_id: sondage_id } }).then((questionListFound) => {\n            questionListFound.forEach((question) => {\n              questionList.push(question.dataValues);\n              if (!thematiqueIdList.includes(question.dataValues.thematique_id)) {\n                thematiqueIdList.push(question.dataValues.thematique_id);\n              }\n            });\n            resolve();\n          });\n        }));\n        promises.push(new Promise(function (resolve) {\n          Remplissage.findAll({ where: { sondage_id: sondage_id, date: searchDate } }).then((remplissageListFound) => {\n            remplissageListFound.forEach((remplissage) => {\n              remplissageIdList.push(remplissage.dataValues.id);\n            });\n            resolve();\n          });\n        }));\n        promises.push(new Promise(function (resolve) {\n          Sondage.findOne({ where: { id: sondage_id } }).then((sondage) => {\n            sondage_name = sondage.dataValues.name;\n            resolve();\n          });\n        }));\n        Promise.all(promises).then(() => {\n          promises = [];\n          const thematiqueList = [];\n          const reponseList = [];\n          promises.push(new Promise(function (resolve) {\n            Thematique.findAll({ where: { id: { [Op.or]: thematiqueIdList } } }).then((thematiqueListFound) => {\n              thematiqueListFound.forEach((thematique) => {\n                thematiqueList.push(thematique.dataValues);\n              });\n              resolve();\n            });\n          }));\n          promises.push(new Promise(function (resolve) {\n            if (remplissageIdList.length > 0) {\n              Reponse.findAll({ where: { remplissage_id: { [Op.or]: remplissageIdList } } }).then(((reponses) => {\n                reponses.forEach((reponse) => {\n                  reponseList.push(reponse.dataValues);\n                });\n                resolve();\n              }));\n            } else {\n              resolve();\n            }\n          }));\n          Promise.all(promises).then(() => {\n            console.log(questionList);\n            // thematiqueId --> { thematiqueName, questionMap }\n            // questionMap: questionId --> { keyWord, sum, numberAnswer } \n            const sondageMap = new Map();\n            // thematiqueId -->  name \n            const thematiqueMap = new Map();\n            thematiqueList.forEach((thematique) => {\n              thematiqueMap.set(thematique.id, thematique.name);\n              sondageMap.set(thematique.id, { thematiqueName: thematique.name, questionMap: new Map() });\n            });\n            // question ID --> thematiqueId\n            const questionToThematique = new Map();\n            questionList.forEach((question) => {\n              questionToThematique.set(question.id, question.thematique_id);\n              sondageMap.get(question.thematique_id).questionMap.set(question.id, { keyWord: question.keyWord, sum: 0, numberAnswer: 0 });\n            });\n            reponseList.forEach((reponse) => {\n              const thematiqueId = questionToThematique.get(reponse.question_id);\n              sondageMap.get(thematiqueId).questionMap.get(reponse.question_id).sum += reponse.valeur;\n              sondageMap.get(thematiqueId).questionMap.get(reponse.question_id).numberAnswer += 1;\n            });\n            const sondageResult = {\n              name: sondage_name,\n              thematiqueList: [],\n            };\n            sondageMap.forEach((thematiqueObject) => {\n              const thematique = {\n                name: thematiqueObject.thematiqueName,\n                questionList: [],\n              };\n              thematiqueObject.questionMap.forEach((questionObject) => {\n                thematique.questionList.push({\n                  keyWord: questionObject.keyWord,\n                  avg: questionObject.sum / (questionObject.numberAnswer || 1),\n                });\n              });\n              sondageResult.thematiqueList.push(thematique);\n            });\n            resolveAll(sondageResult);\n          });\n        });\n      }\n    });\n  });\n};\n\nUser.prototype.getStatistics = function (next) {\n  const statistics = {\n    monthSentSondage: [], // fait\n    monthAnsweredSondage: [], // fait\n    totalSentSondage: 0, // fait\n    totalAnsweredSondage: 0, // fait\n    totalRate: 0,\n    totalSatis: 0,\n    todayAnsweredSendedRate: 0, // fait\n    todayAverageSatisfaction: 0, // fait\n    monthAverageSatisfaction: [], // fait\n    weekRate: [],\n\n  };\n  \n  const getTotalAnsweredSondage = new Promise(function (resolve) {\n    Remplissage.count().then((total) => {\n      resolve(total);\n    });\n  });\n\n  const getTotalSentSondage = new Promise(function (resolve) {\n    JourSondage.sum('nombre_emission').then((total) => {\n      resolve(total);\n    });\n  });\n\n  const getTotalRate = new Promise((resolve) => {\n    Promise.all([getTotalAnsweredSondage, getTotalSentSondage])\n      .then(((data) => {\n        const rate = parseFloat((data[0] / data[1]).toFixed(3));\n        resolve(rate);\n      }));\n  });\n\n  const getTotalSatis = new Promise((resolve) => {\n    Reponse.sum('valeur').then((val) => {\n      Reponse.count().then(total => resolve(parseFloat((val / total).toFixed(3))));\n    });\n  });\n\n  const getJourSentSondage = jour => new Promise((resolve) => {\n    const jourDate = new Date(jour).toLocaleDateString();\n    JourSondage.findOne({ where: { date_emmission: jour } }).then((jsondage) => {\n      if (jsondage) {\n        console.log(\"On \", jourDate, \", \", jsondage.dataValues.nombre_emission, \" mails were sent.\");\n        resolve(jsondage.dataValues.nombre_emission);\n      } else {\n        console.log(\"No mail sent on: \", jourDate);\n        resolve(0);\n      }\n    });\n  });\n\n  const getJourAnsweredSondage = jour => new Promise((resolve) => {\n    const jourDate = new Date(jour).toLocaleDateString();\n    Remplissage.count({ where: { date: jour } }).then((nb) => {\n      console.log(\"On \", jourDate, \", \", nb, \" sondage were answered.\");\n      resolve(nb);\n    });\n  });\n\n  const getMonthSentSondage = new Promise((resolve) => {\n    const intPromises = [];\n    for (let i = 0; i < 31; i++) {\n      intPromises.push(getJourSentSondage(Date.now() - (86400000 * i)));\n    }\n    Promise.all(intPromises).then((data) => {\n      resolve(data);\n    });\n  });\n\n  const getMonthAnsweredSondage = new Promise((resolve) => {\n    const intPromises = [];\n    for (let i = 0; i < 31; i++) {\n      intPromises.push(getJourAnsweredSondage(Date.now() - (86400000 * i)));\n    }\n    Promise.all(intPromises).then((data) => {\n      resolve(data);\n    });\n  });\n\n  const getDayStatis = jour => new Promise((resolve) => {\n    Reponse.findAll({\n      include: [{\n        model: Remplissage,\n        where: { date: jour },\n      }],\n    }).then((reps) => {\n      if (reps.length > 0) {\n        let satisfaction = 0;\n        reps.forEach((rep) => {\n          satisfaction += rep.dataValues.valeur;\n        });\n        resolve(parseFloat((satisfaction / reps.length).toFixed(3)));\n      } else {\n        resolve(0);\n      }\n    });\n  });\n  \n  const getDayRate = jour => new Promise((resolve) => {\n    Promise.all([getJourAnsweredSondage(jour), getJourSentSondage(jour)])\n      .then(((data) => {\n        console.log(data);\n        let rate = Number;\n        if (data[1] !== 0) {\n          rate = parseFloat((data[0] / data[1]).toFixed(3));\n        } else {\n          rate = 0;\n        }\n        resolve(rate);\n      }));\n  });\n\n  const getTodayStatis = new Promise((resolve) => {\n    getDayStatis(Date.now()).then(data => resolve(data));\n  });\n\n  const getTodayRate = new Promise((resolve) => {\n    getDayRate(Date.now()).then(data => resolve(data));\n  });\n\n  const getMonthStatis = new Promise((resolve) => {\n    const intPromises = [];\n    for (let i = 0; i < 31; i++) {\n      intPromises.push(getDayStatis(Date.now() - (86400000 * i)));\n    }\n    Promise.all(intPromises).then((data) => {\n      resolve(data);\n    });\n  });\n\n  const getWeekRate = new Promise((resolve) => {\n    const intPromises = [];\n    for (let i = 0; i < 8; i++) {\n      intPromises.push(getDayRate(Date.now() - (86400000 * i)));\n    }\n    Promise.all(intPromises).then((data) => {\n      resolve(data);\n    });\n  });\n\n  Promise.all([\n    getTotalAnsweredSondage,\n    getTotalSentSondage,\n    getTotalRate,\n    getTotalSatis,\n    getMonthSentSondage,\n    getMonthAnsweredSondage,\n    getTodayRate,\n    getTodayStatis,\n    getMonthStatis,\n    getWeekRate,\n  ]).then((statisticTab) => {\n    const [\n      totalAnsweredSondage, \n      totalSentSondage, \n      totalRate,\n      totalSatis,\n      monthSentSondage, \n      monthAnsweredSondage,\n      todayAnsweredSendedRate,\n      todayAverageSatisfaction,\n      monthAverageSatisfaction,\n      weekRate,\n    ] = statisticTab;\n    next({\n      totalSentSondage: totalSentSondage,\n      totalAnsweredSondage: totalAnsweredSondage,\n      totalRate: totalRate,\n      totalSatis: totalSatis,\n      monthSentSondage: monthSentSondage,\n      monthAnsweredSondage: monthAnsweredSondage,\n      todayAnsweredSendedRate: todayAnsweredSendedRate,\n      todayAverageSatisfaction: todayAverageSatisfaction,\n      monthAverageSatisfaction: monthAverageSatisfaction,\n      weekRate: weekRate,\n    });\n  });\n};\n\nUser.prototype.getUserStat = function () {\n  const getDayStatis = (jour, thematique) => new Promise((resolve) => {\n    Reponse.findAll({\n      include: [{\n        model: Remplissage,\n        where: { date: jour, user_id: this.id },\n      },\n      { \n        model: Question,\n        where: { thematique_id: thematique }, \n      },\n      ],\n    }).then((reps) => {\n      if (reps.length > 0) {\n        let satisfaction = 0;\n        reps.forEach((rep) => {\n          satisfaction += rep.dataValues.valeur;\n        });\n        resolve(parseFloat((satisfaction / reps.length).toFixed(3)));\n      } else {\n        resolve(0);\n      }\n    });\n  });\n\n  return new Promise((resolve) => {\n    const reponse = [];\n    Thematique.findAll().then((thematiques) => {\n      thematiques.forEach((thematique) => {\n        const themPromise = new Promise((resolveThem) => {\n          const intPromises = [];\n          for (let i = 0; i < 31; i++) {\n            intPromises.push(getDayStatis(Date.now() - (86400000 * i), thematique.dataValues.id));\n          }\n          Promise.all(intPromises).then((data) => {\n            resolveThem({ [thematique.dataValues.name]: data });\n          });\n        });\n        reponse.push(themPromise);\n      });\n      Promise.all(reponse).then((data) => {\n        resolve(data);\n      }); \n    });\n  }); \n};\n\nUser.prototype.findSondage = function (req) {\n  return new Promise((resolve) => {\n    const { sondage_id, remplissage_id } = req.user;\n    const serverResponse = { alreadyAnswered: false };\n    Remplissage.findOne({ where: { id: remplissage_id } }).then((remplissage) => {\n      Question.findAll({\n        include: [{\n          model: Thematique,\n        }],\n        where: { sondage_id: sondage_id }, \n      }).then((questions) => {\n        const questionList = [];\n        const thematiqueList = new Map();\n        questions.forEach((question) => {\n          const quest = JSON.parse(JSON.stringify(question));\n          delete quest.thematique;\n          if (!thematiqueList.get(question.dataValues.thematique.dataValues.id)) {\n            thematiqueList.set(\n              question.dataValues.thematique.dataValues.id, \n              question.dataValues.thematique.dataValues,\n            );\n          }\n          const newList = thematiqueList.get(question.dataValues.thematique.dataValues.id);\n          if (newList.questionList) {\n            newList.questionList.push(quest);\n          } else {\n            newList.questionList = [quest];\n          }\n          thematiqueList.set(question.dataValues.thematique.dataValues.id, newList); \n        });\n        thematiqueList.forEach((elem) => {\n          questionList.push(elem);\n        });\n        serverResponse.thematiqueList = questionList; \n\n        // Si le sondage a déjà été remplis, on renvois les réponses\n        if (remplissage) {\n          serverResponse.alreadyAnswered = true;\n          Reponse.findAll({ where: { remplissage_id: remplissage_id } }).then((reponses) => {\n            Sondage.findOne({ where: { id: sondage_id } }).then((sondage) => {\n              Commentaire.findAll({ where: { remplissage_id: remplissage_id } })\n                .then((commentaires) => {\n                  serverResponse.sondageName = sondage.dataValues.name;\n                  const reponseList = [];\n                  const commentaireList = [];\n                  reponses.forEach((reponse) => {\n                    reponseList.push(reponse);\n                  });\n                  commentaires.forEach((commentaire) => {\n                    commentaireList.push(commentaire);\n                  }); \n                  serverResponse.reponseList = reponseList;\n                  serverResponse.commentaireList = commentaireList;\n                  resolve(serverResponse);\n                });\n            });\n          }); \n        } else {\n          Sondage.findOne({ where: { id: sondage_id } }).then((sondage) => {\n            serverResponse.sondageName = sondage.dataValues.name;\n            resolve(serverResponse);\n          }); \n        }\n      }); \n    });\n  });\n};\n    \n// input\n// const sondage = {\n//   remlissage_id: \"...\"\n//   sondage_id: \"..\",\n//   answered_questions: [\n//     {\n//       question_id: \"...\",\n//       answer: \"...\",\n//     },\n//   answered_commentaires: [\n//     {\n//      thematique_id: \"...\",\n//      answer: \"...\",\n//     },\n//   ],\n// };\n// uniquement les questions auxquelles l'ut a repondue, pas de question sans reponses\nUser.prototype.answerSondage = function (sondage, simulationDate) {\n  const date = simulationDate || Date.now();\n  return new Promise((resolve) => {\n    const remplissage_id = sondage.remplissage_id;\n    const sondage_id = sondage.sondage_id;\n    Remplissage.addRemplissage(remplissage_id, sondage_id, this.id, date).then(() => {\n      const promises = [];\n      sondage.answered_questions.forEach((question_answer) => {\n        promises.push(\n          Reponse.addReponse(remplissage_id, question_answer.question_id, question_answer.answer),\n        );\n      });\n      sondage.answered_commentaires.forEach((commentaire_answer) => {\n        promises.push(\n          Commentaire.addCommentaire(\n            remplissage_id, commentaire_answer.thematique_id, commentaire_answer.answer,\n          ),\n        );\n      });\n      Promise.all(promises).then(() => {\n        resolve();\n      });\n    });\n  });\n};\n\nUser.prototype.updateAnswer = function (sondage) {\n  return new Promise((resolve) => {\n    const remplissage_id = sondage.remplissage_id;\n    sondage.answered_questions.forEach((question) => {\n      Reponse.findOne({\n        where: { \n          remplissage_id: remplissage_id, \n          question_id: question.question_id,\n        }, \n      })\n        .then((reponse) => {\n          Reponse.updateReponse(reponse.dataValues.id, question.answer);\n        });\n    });\n    sondage.answered_commentaires.forEach((commentaire) => {\n      Commentaire.findOne({\n        where: {\n          remplissage_id: remplissage_id, \n          thematique_id: commentaire.thematique_id,\n        }, \n      })\n        .then((comment) => {\n          if (comment) {\n            Commentaire.updateCommentaire(comment.dataValues.id, commentaire.answer);\n          } else {\n            Commentaire.addCommentaire(\n              remplissage_id, commentaire.thematique_id, commentaire.answer,\n            );\n          }\n        });\n    });\n    resolve();\n  });\n};\n\nconst Models = {\n  User: User,\n  Sondage: Sondage,\n  JourSondage: JourSondage,\n  Remplissage: Remplissage,\n  Question: Question,\n  Reponse: Reponse,\n  Thematique: Thematique,\n  Commentaire: Commentaire,\n  Keyword: Keyword,\n  Group: Group,\n};\n\nmodule.exports = Models;\n"],"file":"index.js"}