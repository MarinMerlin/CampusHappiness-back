{"version":3,"sources":["../../models/index.js"],"names":["Sequelize","require","env","id_generator","Op","userConstructor","jourSondageConstructor","questionConstructor","remplissageConstructor","reponseConstructor","sondageConstructor","thematiqueConstructor","commentaireConstructor","keywordConstructor","groupConstructor","choiceConstructor","postConstructor","sequelize","database","username","password","host","dialect","operatorsAliases","logging","pool","max","min","acquire","idle","User","JourSondage","Question","Remplissage","Reponse","Sondage","Thematique","Commentaire","Keyword","Group","Choice","Post","belongsTo","foreignKey","targetKey","prototype","getSondage","Promise","resolve","sondageList","findAll","then","sondages","include","model","questions","forEach","sondage","thematiqueList","question","dataValues","sondage_id","id","thema","filter","thematique","thematique_id","length","questionList","push","valeur","name","getGroups","groupList","groups","group","addThematiqueId","thematiqueListWithId","thematiqueWithId","createSondage","addSondage","pseudo","Date","now","promises","addThematique","all","addQuestion","text","keyWord","updateSondage","findOne","where","getCommentairesJour","jour","date","commentaires","promiseList","commentaire","promise","resolveCom","user","firstName","lastName","email","remplissage","user_id","console","log","getStatisticsSpecific","param","searchDate","parseInt","year","month","day","resolveAll","date_emmission","jourSondage","thematiqueIdList","remplissageIdList","sondage_name","questionListFound","includes","remplissageListFound","reponseList","or","thematiqueListFound","remplissage_id","reponses","reponse","sondageMap","Map","thematiqueMap","set","thematiqueName","questionMap","questionToThematique","get","sum","numberAnswer","thematiqueId","question_id","sondageResult","thematiqueObject","questionObject","avg","getStatistics","next","statistics","monthSentSondage","monthAnsweredSondage","totalSentSondage","totalAnsweredSondage","totalRate","totalSatis","todayAnsweredSendedRate","todayAverageSatisfaction","monthAverageSatisfaction","weekRate","getTotalAnsweredSondage","count","total","getTotalSentSondage","getTotalRate","data","rate","parseFloat","toFixed","getTotalSatis","val","getJourSentSondage","jourDate","toLocaleDateString","jsondage","getJourAnsweredSondage","nb","getMonthSentSondage","intPromises","i","getMonthAnsweredSondage","getDayStatis","reps","satisfaction","rep","getDayRate","Number","getTodayStatis","getTodayRate","getMonthStatis","getWeekRate","statisticTab","getUserStat","compteur","thematiques","themPromise","resolveThem","findSondage","req","serverResponse","alreadyAnswered","quest","JSON","parse","stringify","newList","elem","sondageName","commentaireList","answerSondage","simulationDate","addRemplissage","answered_questions","question_answer","addReponse","answer","answered_commentaires","commentaire_answer","addCommentaire","updateAnswer","updateReponse","comment","updateCommentaire","Models","module","exports"],"mappings":"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","sourcesContent":["const Sequelize = require('sequelize');\nconst env = require('../const');\nconst id_generator = require('../custom_module/id_generator');\n// const getCommentaire = require('./dataFetch').getCommentaire;\n\nconst Op = Sequelize.Op;\n\n// models constructors\nconst userConstructor = require('./constructor/user');\nconst jourSondageConstructor = require('./constructor/jourSondage');\nconst questionConstructor = require('./constructor/question');\nconst remplissageConstructor = require('./constructor/remplissage');\nconst reponseConstructor = require('./constructor/reponse');\nconst sondageConstructor = require('./constructor/sondage');\nconst thematiqueConstructor = require('./constructor/thematique');\nconst commentaireConstructor = require('./constructor/commentaire');\nconst keywordConstructor = require('./constructor/keyword');\nconst groupConstructor = require('./constructor/group');\nconst choiceConstructor = require('./constructor/choice');\nconst postConstructor = require('./constructor/post');\n\n\n// sequelize connection\nconst sequelize = new Sequelize(env.database, env.username, env.password, {\n  host: env.host,\n  dialect: 'mysql',\n  operatorsAliases: false,\n  logging: false,\n  pool: {\n    max: 5,\n    min: 0,\n    acquire: 30000,\n    idle: 10000,\n  },\n});\n\n// Models\nconst User = userConstructor(sequelize);\nconst JourSondage = jourSondageConstructor(sequelize);\nconst Question = questionConstructor(sequelize);\nconst Remplissage = remplissageConstructor(sequelize);\nconst Reponse = reponseConstructor(sequelize);\nconst Sondage = sondageConstructor(sequelize);\nconst Thematique = thematiqueConstructor(sequelize);\nconst Commentaire = commentaireConstructor(sequelize);\nconst Keyword = keywordConstructor(sequelize);\nconst Group = groupConstructor(sequelize);\nconst Choice = choiceConstructor(sequelize);\nconst Post = postConstructor(sequelize);\n\n// // Foreign keys\nQuestion.belongsTo(Sondage, { foreignKey: 'sondage_id', targetKey: 'id' });\nJourSondage.belongsTo(Sondage, { foreignKey: 'sondage_id', targetKey: 'id' });\nGroup.belongsTo(Sondage, { foreignKey: 'sondage_id', targetKey: 'id' });\nUser.belongsTo(Group, { foreignKey: 'group_id', targetKey: 'id' });\nReponse.belongsTo(Question, { foreignKey: 'question_id', targetKey: 'id' });\nReponse.belongsTo(Remplissage, { foreignKey: 'remplissage_id', targetKey: 'id' });\nRemplissage.belongsTo(Sondage, { foreignKey: 'sondage_id', targetKey: 'id' });\nRemplissage.belongsTo(User, { foreignKey: 'user_id', targetKey: 'id' });\nQuestion.belongsTo(Thematique, { foreignKey: 'thematique_id', targetKey: 'id' });\nCommentaire.belongsTo(Thematique, { foreignKey: 'thematique_id', targetKey: 'id' });\nCommentaire.belongsTo(Remplissage, { foreignKey: 'remplissage_id', targetKey: 'id' });\nChoice.belongsTo(Question, { foreignKey: 'question_id', targetKey: 'id' });\n\n// Should change this function by using promises more\nUser.prototype.getSondage = function () {\n  return new Promise((resolve) => {\n    const sondageList = [];\n    Sondage.findAll().then((sondages) => {\n      Question.findAll({\n        include: [{\n          model: Thematique,\n        }],\n      }).then((questions) => {\n        sondages.forEach((sondage) => {\n          const thematiqueList = [];\n          questions.forEach((question) => {\n            if (question.dataValues.sondage_id === sondage.dataValues.id) {\n              const thema = thematiqueList.filter(\n                thematique => thematique.id === question.dataValues.thematique_id,\n              );\n              if (thema.length > 0) {\n                thema[0].questionList.push({\n                  id: question.dataValues.id, \n                  question: question.dataValues.valeur,\n                });\n              } else {\n                thematiqueList.push({\n                  id: question.dataValues.thematique_id,\n                  name: question.dataValues.thematique.dataValues.name,\n                  questionList: [{\n                    id: question.dataValues.id, \n                    question: question.dataValues.valeur,\n                  }],\n                });\n              }\n            }\n          });\n          sondageList.push({\n            id: sondage.dataValues.id, \n            name: sondage.dataValues.name,\n            thematiqueList: thematiqueList,\n          });\n        });\n        resolve(sondageList);\n      });\n    });\n  });\n};\n\nUser.prototype.getGroups = function () {\n  return new Promise((resolve) => {\n    const groupList = [];\n    Group.findAll().then((groups) => {\n      groups.forEach((group) => {\n        groupList.push({ id: group.dataValues.id, name: group.dataValues.name });\n      });\n      resolve(groupList);\n    });\n  });\n};\n\nconst addThematiqueId = function (thematiqueList, thematiqueListWithId) {\n  thematiqueList.forEach((thematique) => {\n    thematiqueListWithId.forEach((thematiqueWithId) => {\n      if (thematiqueWithId.name === thematique.name) {\n        thematique.id = thematiqueWithId.id;\n      }\n    });\n  });\n  return thematiqueList;\n};\n\nUser.prototype.createSondage = function (sondage) {\n  return new Promise((resolve) => {\n    const sondage_id = id_generator();\n    Sondage.addSondage(sondage_id, this.pseudo, Date.now(), sondage.name).then(() => {\n      let promises = [];\n      sondage.thematiqueList.forEach((thematique) => {\n        promises.push(Thematique.addThematique(thematique.name));\n      });\n      Promise.all(promises).then((thematiqueListWithId) => {\n        addThematiqueId(sondage.thematiqueList, thematiqueListWithId);\n        promises = [];\n        sondage.thematiqueList.forEach((thematique) => {\n          thematique.questionList.forEach((question) => {\n            promises.push(Question.addQuestion(\n              sondage_id, thematique.id, question.text, question.keyWord,\n            ));\n          });\n        });\n        Promise.all(promises).then(() => { resolve(sondage_id); });\n      });\n    });\n  });\n};\n\nUser.prototype.updateSondage = function (sondage, id) {\n  return new Promise((resolve) => {\n    Sondage.findOne({ where: { id: id } }).then(() => {\n      let promises = [];\n      sondage.thematiqueList.forEach((thematique) => {\n        promises.push(Thematique.addThematique(thematique.name));\n      });\n      Promise.all(promises).then((thematiqueListWithId) => {\n        addThematiqueId(sondage.thematiqueList, thematiqueListWithId);\n        promises = [];\n        sondage.thematiqueList.forEach((thematique) => {\n          thematique.questionList.forEach((question) => {\n            promises.push(Question.addQuestion(\n              id, thematique.id, question.text, question.keyWord,\n            ));\n          });\n        });\n        Promise.all(promises).then(() => { resolve(id); });\n      });\n    });\n  });\n};\n\nUser.prototype.getCommentairesJour = function (jour) {\n  return new Promise((resolve) => {\n    Commentaire.findAll({\n      include: [{\n        model: Remplissage,\n        where: { date: jour },\n      },\n      {\n        model: Thematique,\n      },\n      ],\n    }).then((commentaires) => {\n      const promiseList = [];\n      commentaires.forEach((commentaire) => {\n        const promise = new Promise((resolveCom) => {\n          commentaire.dataValues.user = {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n          };\n          User.findOne({ where: { id: commentaire.dataValues.remplissage.dataValues.user_id } })\n            .then((user) => {\n              commentaire.dataValues.user.firstName = user.dataValues.firstName;\n              commentaire.dataValues.user.lastName = user.dataValues.lastName;\n              commentaire.dataValues.user.email = user.dataValues.email;\n              resolveCom();\n            });\n        });\n        promiseList.push(promise);\n      });\n      Promise.all(promiseList).then(() => {\n        console.log(\"Commentaire for \", jour, \" found.\");\n        resolve(commentaires);\n      });\n    });\n  });\n};\n\nUser.prototype.getStatisticsSpecific = function (param) {\n  const searchDate = new Date(parseInt(param.year, 10), parseInt(param.month, 10) - 1, parseInt(param.day, 10));\n  return new Promise(function (resolveAll) {\n    Group.findOne({ where: { id: param.group } }).then((group) => {\n      const sondage_id = group.dataValues.sondage_id;\n      JourSondage.findOne({ where: { date_emmission: searchDate, sondage_id: sondage_id } }).then((jourSondage) => {\n        if (!jourSondage) {\n          resolveAll(\"no sondage this day...\");\n        } else {\n          const questionList = [];\n          const thematiqueIdList = [];\n          const remplissageIdList = [];\n          let sondage_name = null;\n          let promises = [];\n          promises.push(new Promise(function (resolve) {\n            Question.findAll({ where: { sondage_id: sondage_id } }).then((questionListFound) => {\n              questionListFound.forEach((question) => {\n                questionList.push(question.dataValues);\n                if (!thematiqueIdList.includes(question.dataValues.thematique_id)) {\n                  thematiqueIdList.push(question.dataValues.thematique_id);\n                }\n              });\n              resolve();\n            });\n          }));\n          promises.push(new Promise(function (resolve) {\n            Remplissage.findAll({ where: { sondage_id: sondage_id, date: searchDate } }).then((remplissageListFound) => {\n              remplissageListFound.forEach((remplissage) => {\n                remplissageIdList.push(remplissage.dataValues.id);\n              });\n              resolve();\n            });\n          }));\n          promises.push(new Promise(function (resolve) {\n            Sondage.findOne({ where: { id: sondage_id } }).then((sondage) => {\n              sondage_name = sondage.dataValues.name;\n              resolve();\n            });\n          }));\n          Promise.all(promises).then(() => {\n            promises = [];\n            const thematiqueList = [];\n            const reponseList = [];\n            promises.push(new Promise(function (resolve) {\n              Thematique.findAll({ where: { id: { [Op.or]: thematiqueIdList } } }).then((thematiqueListFound) => {\n                thematiqueListFound.forEach((thematique) => {\n                  thematiqueList.push(thematique.dataValues);\n                });\n                resolve();\n              });\n            }));\n            promises.push(new Promise(function (resolve) {\n              if (remplissageIdList.length > 0) {\n                Reponse.findAll({ where: { remplissage_id: { [Op.or]: remplissageIdList } } }).then(((reponses) => {\n                  reponses.forEach((reponse) => {\n                    reponseList.push(reponse.dataValues);\n                  });\n                  resolve();\n                }));\n              } else {\n                resolve();\n              }\n            }));\n            Promise.all(promises).then(() => {\n              console.log(questionList);\n              // thematiqueId --> { thematiqueName, questionMap }\n              // questionMap: questionId --> { keyWord, sum, numberAnswer } \n              const sondageMap = new Map();\n              // thematiqueId -->  name \n              const thematiqueMap = new Map();\n              thematiqueList.forEach((thematique) => {\n                thematiqueMap.set(thematique.id, thematique.name);\n                sondageMap.set(thematique.id, { thematiqueName: thematique.name, questionMap: new Map() });\n              });\n              // question ID --> thematiqueId\n              const questionToThematique = new Map();\n              questionList.forEach((question) => {\n                questionToThematique.set(question.id, question.thematique_id);\n                sondageMap.get(question.thematique_id).questionMap.set(question.id, { keyWord: question.keyWord, sum: 0, numberAnswer: 0 });\n              });\n              reponseList.forEach((reponse) => {\n                const thematiqueId = questionToThematique.get(reponse.question_id);\n                sondageMap.get(thematiqueId).questionMap.get(reponse.question_id).sum += reponse.valeur;\n                sondageMap.get(thematiqueId).questionMap.get(reponse.question_id).numberAnswer += 1;\n              });\n              const sondageResult = {\n                name: sondage_name,\n                thematiqueList: [],\n              };\n              sondageMap.forEach((thematiqueObject) => {\n                const thematique = {\n                  name: thematiqueObject.thematiqueName,\n                  questionList: [],\n                };\n                thematiqueObject.questionMap.forEach((questionObject) => {\n                  thematique.questionList.push({\n                    keyWord: questionObject.keyWord,\n                    avg: questionObject.sum / (questionObject.numberAnswer || 1),\n                  });\n                });\n                sondageResult.thematiqueList.push(thematique);\n              });\n              resolveAll(sondageResult);\n            });\n          });\n        }\n      });\n    });\n  });\n};\n\nUser.prototype.getStatistics = function (next) {\n  const statistics = {\n    monthSentSondage: [], // fait\n    monthAnsweredSondage: [], // fait\n    totalSentSondage: 0, // fait\n    totalAnsweredSondage: 0, // fait\n    totalRate: 0,\n    totalSatis: 0,\n    todayAnsweredSendedRate: 0, // fait\n    todayAverageSatisfaction: 0, // fait\n    monthAverageSatisfaction: [], // fait\n    weekRate: [],\n\n  };\n  \n  const getTotalAnsweredSondage = new Promise(function (resolve) {\n    Remplissage.count().then((total) => {\n      resolve(total);\n    });\n  });\n\n  const getTotalSentSondage = new Promise(function (resolve) {\n    JourSondage.sum('nombre_emission').then((total) => {\n      resolve(total);\n    });\n  });\n\n  const getTotalRate = new Promise((resolve) => {\n    Promise.all([getTotalAnsweredSondage, getTotalSentSondage])\n      .then(((data) => {\n        const rate = parseFloat((data[0] / data[1]).toFixed(3));\n        resolve(rate);\n      }));\n  });\n\n  const getTotalSatis = new Promise((resolve) => {\n    Reponse.sum('valeur').then((val) => {\n      Reponse.count().then(total => resolve(parseFloat((val / total).toFixed(3))));\n    });\n  });\n\n  const getJourSentSondage = jour => new Promise((resolve) => {\n    const jourDate = new Date(jour).toLocaleDateString();\n    JourSondage.sum('nombre_emission', { where: { date_emmission: jour } }).then((jsondage) => {\n      if (jsondage > 0) {\n        console.log(\"On \", jourDate, \", \", jsondage, \" mails were sent.\");\n        resolve(jsondage);\n      } else {\n        console.log(\"No mail sent on: \", jourDate);\n        resolve(0);\n      }\n    });\n  });\n\n  const getJourAnsweredSondage = jour => new Promise((resolve) => {\n    const jourDate = new Date(jour).toLocaleDateString();\n    Remplissage.count({ where: { date: jour } }).then((nb) => {\n      console.log(\"On \", jourDate, \", \", nb, \" sondage were answered.\");\n      resolve(nb);\n    });\n  });\n\n  const getMonthSentSondage = new Promise((resolve) => {\n    const intPromises = [];\n    for (let i = 0; i < 31; i++) {\n      intPromises.push(getJourSentSondage(Date.now() - (86400000 * i)));\n    }\n    Promise.all(intPromises).then((data) => {\n      resolve(data);\n    });\n  });\n\n  const getMonthAnsweredSondage = new Promise((resolve) => {\n    const intPromises = [];\n    for (let i = 0; i < 31; i++) {\n      intPromises.push(getJourAnsweredSondage(Date.now() - (86400000 * i)));\n    }\n    Promise.all(intPromises).then((data) => {\n      resolve(data);\n    });\n  });\n\n  const getDayStatis = jour => new Promise((resolve) => {\n    Reponse.findAll({\n      include: [{\n        model: Remplissage,\n        where: { date: jour },\n      }],\n    }).then((reps) => {\n      if (reps.length > 0) {\n        let satisfaction = 0;\n        reps.forEach((rep) => {\n          satisfaction += rep.dataValues.valeur;\n        });\n        resolve(parseFloat((satisfaction / reps.length).toFixed(3)));\n      } else {\n        resolve(0);\n      }\n    });\n  });\n  \n  const getDayRate = jour => new Promise((resolve) => {\n    Promise.all([getJourAnsweredSondage(jour), getJourSentSondage(jour)])\n      .then(((data) => {\n        console.log(data);\n        let rate = Number;\n        if (data[1] !== 0) {\n          rate = parseFloat((data[0] / data[1]).toFixed(3));\n        } else {\n          rate = 0;\n        }\n        resolve(rate);\n      }));\n  });\n\n  const getTodayStatis = new Promise((resolve) => {\n    getDayStatis(Date.now()).then(data => resolve(data));\n  });\n\n  const getTodayRate = new Promise((resolve) => {\n    getDayRate(Date.now()).then(data => resolve(data));\n  });\n\n  const getMonthStatis = new Promise((resolve) => {\n    const intPromises = [];\n    for (let i = 0; i < 31; i++) {\n      intPromises.push(getDayStatis(Date.now() - (86400000 * i)));\n    }\n    Promise.all(intPromises).then((data) => {\n      resolve(data);\n    });\n  });\n\n  const getWeekRate = new Promise((resolve) => {\n    const intPromises = [];\n    for (let i = 0; i < 8; i++) {\n      intPromises.push(getDayRate(Date.now() - (86400000 * i)));\n    }\n    Promise.all(intPromises).then((data) => {\n      resolve(data);\n    });\n  });\n\n  Promise.all([\n    getTotalAnsweredSondage,\n    getTotalSentSondage,\n    getTotalRate,\n    getTotalSatis,\n    getMonthSentSondage,\n    getMonthAnsweredSondage,\n    getTodayRate,\n    getTodayStatis,\n    getMonthStatis,\n    getWeekRate,\n  ]).then((statisticTab) => {\n    const [\n      totalAnsweredSondage, \n      totalSentSondage, \n      totalRate,\n      totalSatis,\n      monthSentSondage, \n      monthAnsweredSondage,\n      todayAnsweredSendedRate,\n      todayAverageSatisfaction,\n      monthAverageSatisfaction,\n      weekRate,\n    ] = statisticTab;\n    next({\n      totalSentSondage: totalSentSondage,\n      totalAnsweredSondage: totalAnsweredSondage,\n      totalRate: totalRate,\n      totalSatis: totalSatis,\n      monthSentSondage: monthSentSondage,\n      monthAnsweredSondage: monthAnsweredSondage,\n      todayAnsweredSendedRate: todayAnsweredSendedRate,\n      todayAverageSatisfaction: todayAverageSatisfaction,\n      monthAverageSatisfaction: monthAverageSatisfaction,\n      weekRate: weekRate,\n    });\n  });\n};\n\nUser.prototype.getUserStat = function () {\n  const getDayStatis = (jour, thematique, compteur = 0) => new Promise((resolve) => {\n    Reponse.findAll({\n      include: [{\n        model: Remplissage,\n        where: { date: jour, user_id: this.id },\n      },\n      { \n        model: Question,\n        where: { thematique_id: thematique }, \n      },\n      ],\n    }).then((reps) => {\n      if (reps.length > 0) {\n        let satisfaction = 0;\n        reps.forEach((rep) => {\n          satisfaction += rep.dataValues.valeur;\n        });\n        resolve(parseFloat((satisfaction / reps.length).toFixed(3)));\n      } else if (compteur > 4) {\n        resolve(0);\n      } else {\n        getDayStatis(jour - 86400000, thematique, compteur + 1).then(data => resolve(data));\n      }\n    });\n  });\n\n  return new Promise((resolve) => {\n    const reponse = [];\n    Thematique.findAll().then((thematiques) => {\n      thematiques.forEach((thematique) => {\n        const themPromise = new Promise((resolveThem) => {\n          const intPromises = [];\n          for (let i = 0; i < 31; i++) {\n            intPromises.push(getDayStatis(Date.now() - (86400000 * i), thematique.dataValues.id));\n          }\n          Promise.all(intPromises).then((data) => {\n            resolveThem({ [thematique.dataValues.name]: data });\n          });\n        });\n        reponse.push(themPromise);\n      });\n      Promise.all(reponse).then((data) => {\n        resolve(data);\n      }); \n    });\n  }); \n};\n\nUser.prototype.findSondage = function (req) {\n  return new Promise((resolve) => {\n    const { sondage_id, remplissage_id } = req.user;\n    const serverResponse = { alreadyAnswered: false };\n    Remplissage.findOne({ where: { id: remplissage_id } }).then((remplissage) => {\n      Question.findAll({\n        include: [{\n          model: Thematique,\n        }],\n        where: { sondage_id: sondage_id }, \n      }).then((questions) => {\n        const questionList = [];\n        const thematiqueList = new Map();\n        questions.forEach((question) => {\n          const quest = JSON.parse(JSON.stringify(question));\n          delete quest.thematique;\n          if (!thematiqueList.get(question.dataValues.thematique.dataValues.id)) {\n            thematiqueList.set(\n              question.dataValues.thematique.dataValues.id, \n              question.dataValues.thematique.dataValues,\n            );\n          }\n          const newList = thematiqueList.get(question.dataValues.thematique.dataValues.id);\n          if (newList.questionList) {\n            newList.questionList.push(quest);\n          } else {\n            newList.questionList = [quest];\n          }\n          thematiqueList.set(question.dataValues.thematique.dataValues.id, newList); \n        });\n        thematiqueList.forEach((elem) => {\n          questionList.push(elem);\n        });\n        serverResponse.thematiqueList = questionList; \n\n        // Si le sondage a déjà été remplis, on renvois les réponses\n        if (remplissage) {\n          serverResponse.alreadyAnswered = true;\n          Reponse.findAll({ where: { remplissage_id: remplissage_id } }).then((reponses) => {\n            Sondage.findOne({ where: { id: sondage_id } }).then((sondage) => {\n              Commentaire.findAll({ where: { remplissage_id: remplissage_id } })\n                .then((commentaires) => {\n                  serverResponse.sondageName = sondage.dataValues.name;\n                  const reponseList = [];\n                  const commentaireList = [];\n                  reponses.forEach((reponse) => {\n                    reponseList.push(reponse);\n                  });\n                  commentaires.forEach((commentaire) => {\n                    commentaireList.push(commentaire);\n                  }); \n                  serverResponse.reponseList = reponseList;\n                  serverResponse.commentaireList = commentaireList;\n                  resolve(serverResponse);\n                });\n            });\n          }); \n        } else {\n          Sondage.findOne({ where: { id: sondage_id } }).then((sondage) => {\n            serverResponse.sondageName = sondage.dataValues.name;\n            resolve(serverResponse);\n          }); \n        }\n      }); \n    });\n  });\n};\n    \n// input\n// const sondage = {\n//   remlissage_id: \"...\"\n//   sondage_id: \"..\",\n//   answered_questions: [\n//     {\n//       question_id: \"...\",\n//       answer: \"...\",\n//     },\n//   answered_commentaires: [\n//     {\n//      thematique_id: \"...\",\n//      answer: \"...\",\n//     },\n//   ],\n// };\n// uniquement les questions auxquelles l'ut a repondue, pas de question sans reponses\nUser.prototype.answerSondage = function (sondage, simulationDate) {\n  const date = simulationDate || Date.now();\n  return new Promise((resolve) => {\n    const remplissage_id = sondage.remplissage_id;\n    const sondage_id = sondage.sondage_id;\n    Remplissage.addRemplissage(remplissage_id, sondage_id, this.id, date).then(() => {\n      const promises = [];\n      sondage.answered_questions.forEach((question_answer) => {\n        promises.push(\n          Reponse.addReponse(remplissage_id, question_answer.question_id, question_answer.answer),\n        );\n      });\n      sondage.answered_commentaires.forEach((commentaire_answer) => {\n        promises.push(\n          Commentaire.addCommentaire(\n            remplissage_id, commentaire_answer.thematique_id, commentaire_answer.answer,\n          ),\n        );\n      });\n      Promise.all(promises).then(() => {\n        resolve();\n      });\n    });\n  });\n};\n\nUser.prototype.updateAnswer = function (sondage) {\n  return new Promise((resolve) => {\n    const remplissage_id = sondage.remplissage_id;\n    sondage.answered_questions.forEach((question) => {\n      Reponse.findOne({\n        where: { \n          remplissage_id: remplissage_id, \n          question_id: question.question_id,\n        }, \n      })\n        .then((reponse) => {\n          Reponse.updateReponse(reponse.dataValues.id, question.answer);\n        });\n    });\n    sondage.answered_commentaires.forEach((commentaire) => {\n      Commentaire.findOne({\n        where: {\n          remplissage_id: remplissage_id, \n          thematique_id: commentaire.thematique_id,\n        }, \n      })\n        .then((comment) => {\n          if (comment) {\n            Commentaire.updateCommentaire(comment.dataValues.id, commentaire.answer);\n          } else {\n            Commentaire.addCommentaire(\n              remplissage_id, commentaire.thematique_id, commentaire.answer,\n            );\n          }\n        });\n    });\n    resolve();\n  });\n};\n\nconst Models = {\n  User: User,\n  Sondage: Sondage,\n  JourSondage: JourSondage,\n  Remplissage: Remplissage,\n  Question: Question,\n  Reponse: Reponse,\n  Thematique: Thematique,\n  Commentaire: Commentaire,\n  Keyword: Keyword,\n  Group: Group,\n  Post: Post,\n};\n\nmodule.exports = Models;\n"],"file":"index.js"}