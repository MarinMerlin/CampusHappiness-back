{"version":3,"sources":["../../models/simulation.js"],"names":["Models","require","id_generator","clearTables","Sondage","User","Reponse","Question","Remplissage","JourSondage","Keyword","Group","Post","Commentaire","simulationTime","simulationDay","Date","setDate","getDate","userList","fakeSurvey","fakeSurvey2","postList","groupIds","sondageIds","rand","max","Math","floor","random","randRep","date","diff","round","now","i","incrementDay","addManyUsers","userNumber","Promise","resolve","promiseArray","user","length","push","addUser","firstName","lastName","email","pseudo","password","all","then","questionIdList","getQuestionIdList","fakeSurveyId1","fakeSurveyId2","findAll","where","sondage_id","questions","forEach","question","id","console","log","questions2","question2","answerSondage_simulation","fake_answer","remplissage_id","answered_questions","answered_commentaires","question_id","answer","answerSondage","answerUserListSondage_simulation","users","create","date_emmission","nombre_emission","dataValues","group","find","jourSondage","increment","answerAll","include","model","firstDay","sondage_id2","addSondage","name","addGroup","findOne","updateSondage","addKeyword","day","numberAddeduser","comments","allRemplissages","remplissage","questionList","thematiqueIdArray","includes","thematique_id","index","commentaire","addCommentaire","Alldays","compteur","count","sum","ajoutPostes","post_number","postPromiseArray","fake_post","addPost"],"mappings":"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","sourcesContent":["const Models = require(\"./index\");\nconst id_generator = require('../custom_module/id_generator');\nconst clearTables = require('./setup');\n\nconst { \n  Sondage, User, Reponse, Question, Remplissage, JourSondage, Keyword, Group, Post, Commentaire,\n} = Models;\n\nconst simulationTime = 35;\nconst simulationDay = new Date();\nsimulationDay.setDate(simulationDay.getDate() - simulationTime);\n\nconst userList = require('./simulationData/userList');\nconst { fakeSurvey, fakeSurvey2 } = require('./simulationData/fakeSurveys');\nconst postList = require('./simulationData/postList');\n\nconst groupIds = [id_generator(), id_generator()];\nconst sondageIds = [id_generator(), id_generator()];\n\n\nconst rand = function (max) {\n  return Math.floor(Math.random() * Math.floor(max));\n};\n\nconst randRep = function (date) {\n  const diff = simulationTime - Math.round((Date.now() - date) / (1000 * 60 * 60 * 24));\n  const i = rand(44) + rand(diff);\n  if (i >= 0 && i <= 14) {\n    return (-1);\n  } if (i >= 15 && i <= 29) {\n    return (0);\n  } if (i >= 29) {\n    return (1);\n  } \n};\n\nconst incrementDay = function () {\n  simulationDay.setDate(simulationDay.getDate() + 1);\n};\n\nconst addManyUsers = function (userNumber) {\n  return new Promise(function (resolve) {\n    if (userNumber > 0) {\n      const promiseArray = [];\n      for (let i = 0; i < userNumber; i++) {\n        const user = userList[rand(userList.length)];\n        promiseArray.push(User.addUser(user.firstName, user.lastName, user.email, user.pseudo, user.password, 0, groupIds[rand(2)]));\n      }\n      Promise.all(promiseArray).then(resolve);\n    } else {\n      resolve();\n    }\n  });\n};\n\nconst questionIdList = {};\n\nconst getQuestionIdList = function (fakeSurveyId1, fakeSurveyId2) {\n  return new Promise(function (resolve) {\n    Question.findAll({ where: { sondage_id: fakeSurveyId1 } }).then((questions) => {\n      questionIdList[fakeSurveyId1] = [];\n      questions.forEach((question) => {\n        questionIdList[fakeSurveyId1].push(question.id);\n      });\n      console.log(\"nombre de question dans la base de donnée:\", questionIdList[fakeSurveyId1].length, \"  \", questions.length);\n      Question.findAll({ where: { sondage_id: fakeSurveyId2 } }).then((questions2) => {\n        questionIdList[fakeSurveyId2] = [];\n        questions2.forEach((question2) => {\n          questionIdList[fakeSurveyId2].push(question2.id);\n        });\n        console.log(\"nombre de question dans la base de donnée:\", questionIdList[fakeSurveyId2].length, \"  \", questions2.length);\n        resolve();\n      });\n    });\n  });\n};\n\nconst answerSondage_simulation = function (user, date, sondage_id) {\n  return new Promise(function (resolve) {\n    const fake_answer = {\n      remplissage_id: id_generator(),\n      sondage_id: sondage_id,\n      answered_questions: [],\n      answered_commentaires: [],\n    };\n    questionIdList[sondage_id].forEach((question_id) => {\n      fake_answer.answered_questions.push({\n        question_id: question_id,\n        answer: randRep(date),\n      });\n    });\n    user.answerSondage(fake_answer, date).then(() => {\n      resolve();\n    });\n  });\n};\n\nconst answerUserListSondage_simulation = function (users, date) {\n  return new Promise(function (resolve) {\n    console.log(simulationDay, \" / \", date);\n    const promiseArray = [];\n    JourSondage.create({\n      id: id_generator(), \n      date_emmission: simulationDay, \n      sondage_id: sondageIds[0], \n      nombre_emission: 0,\n    }).then(() => {\n      JourSondage.create({\n        id: id_generator(), \n        date_emmission: simulationDay, \n        sondage_id: sondageIds[1], \n        nombre_emission: 0,\n      }).then(() => {\n        users.forEach((user) => {\n          const sondage_id = user.dataValues.group.dataValues.sondage_id;\n          JourSondage.find({ \n            where: { sondage_id: sondage_id, date_emmission: simulationDay },\n          }).then((jourSondage) => {\n            if (rand(3) !== 0) {\n              promiseArray.push(answerSondage_simulation(user, date, sondage_id));\n            }\n            jourSondage.increment({ nombre_emission: 1 });\n          });\n        });\n        Promise.all(promiseArray).then(() => {\n          resolve();\n        });\n      });\n    });\n  });\n};\n\nconst answerAll = function () {\n  return new Promise(function (resolve) {\n    User.findAll({ include: [{ model: Group }] }).then((users) => {\n      answerUserListSondage_simulation(users, simulationDay).then(() => {\n        resolve();\n      });\n    });\n  });\n};\n\nconst firstDay = function () {\n  return new Promise(function (resolve) {\n    const sondage_id = sondageIds[0];\n    const sondage_id2 = sondageIds[1];\n    Sondage.addSondage(sondage_id, 'Admin', Date.now(), fakeSurvey.name).then(() => {\n      Sondage.addSondage(sondage_id2, 'Admin', Date.now(), fakeSurvey2.name).then(() => {\n        Group.addGroup(sondage_id, 'Teachers', groupIds[0]).then(() => {\n          Group.addGroup(sondage_id2, 'Students', groupIds[1]).then(() => {\n            User.addUser('Admin', 'Admin', 'admin.admin@gmail.com', 'Admin', 'mdp', 1, groupIds[0]).then(() => {\n              addManyUsers(10).then(() => {\n                User.findOne({ where: { pseudo: 'Admin' } }).then((user) => {\n                  user.updateSondage(fakeSurvey, sondage_id).then(() => {\n                    user.updateSondage(fakeSurvey2, sondage_id2).then(() => {\n                      Keyword.addKeyword(\"Quality\");\n                      Keyword.addKeyword(\"Wait\");\n                      Keyword.addKeyword(\"Noise\");\n                      Keyword.addKeyword(\"Price\");\n                      Keyword.addKeyword(\"Cleanliness\");\n                      Keyword.addKeyword(\"Hardware\");\n                      Keyword.addKeyword(\"Mood\");\n                      Keyword.addKeyword(\"Temperature\");\n                      Keyword.addKeyword(\"Comfort\");\n                      getQuestionIdList(sondage_id, sondage_id2).then(() => {\n                        answerAll().then(() => { \n                          incrementDay();\n                          resolve(); \n                        }); \n                      });\n                    });\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n};\n\nconst day = function (numberAddeduser) {\n  return new Promise(function (resolve) {\n    addManyUsers(numberAddeduser).then(() => {\n      answerAll().then(() => {\n        incrementDay();\n        resolve();\n      });\n    });\n  });\n};\n\nfunction comments() { \n  Remplissage.findAll().then((allRemplissages) => {\n    allRemplissages.forEach((remplissage) => {\n      if (Math.random() < 0.4) {\n        Question.findAll({ where: { sondage_id: remplissage.sondage_id } }).then((questionList) => {\n          const thematiqueIdArray = [];\n          questionList.forEach((question) => {\n            if (!thematiqueIdArray.includes(question.thematique_id)) {\n              thematiqueIdArray.push(question.thematique_id);\n            }\n          });\n          const index = Math.round(Math.random() * (thematiqueIdArray.length - 1));\n          const remplissage_id = remplissage.id;\n          const thematique_id = thematiqueIdArray[index];\n          const commentaire = 'faux message';\n          Commentaire.addCommentaire(remplissage_id, thematique_id, commentaire);\n        });\n      }\n    });\n  });\n}\n\nconst Alldays = function (compteur) {\n  if (compteur === 0) {\n    console.log(' -- fin --');\n    User.count().then((sum) => {\n      console.log(\"user :\", sum);\n    });\n    Remplissage.count().then((sum) => {\n      console.log(\"remplissage :\", sum);\n    });\n    Reponse.count().then((sum) => {\n      console.log(\"reponses :\", sum);\n    });\n    comments();\n  } else {\n    compteur--;\n    console.log(compteur);\n    if (compteur <= 15) {\n      day(rand(2)).then(() => {\n        Alldays(compteur);\n      });\n    } else {\n      day(rand(5)).then(() => {\n        Alldays(compteur);\n      });\n    }\n  }\n};\n\nconst ajoutPostes = () => {\n  const post_number = 6;\n\n  console.log(\"Adding posts ...\");\n  const postPromiseArray = [];\n  postList.forEach((fake_post) => {\n    postPromiseArray.push(Post.addPost(fake_post));\n  });\n\n  Promise.all(postPromiseArray).then(() => {\n    console.log(post_number, \" Posts added\");\n  });\n}; \n\nclearTables().then(() => {\n  console.log(\"\");\n  console.log(\"------------------------------------------\");\n  console.log(\"\");\n  firstDay().then(() => {\n    Alldays(simulationTime);\n    ajoutPostes();\n  });\n});"],"file":"simulation.js"}