{"version":3,"sources":["../../models/simulation.js"],"names":["Models","require","randInt","id_generator","clearTables","Sondage","User","Reponse","Question","Remplissage","Admin","JourSondage","simulationTime","simulationDay","Date","setDate","getDate","fakeSurvey","name","thematiqueList","questionList","text","keyWord","incrementDay","addManyUsers","userNumber","Promise","resolve","promiseArray","i","push","addUser","all","then","fakeSurvey_id","questionIdList","getQuestionIdList","fakeSurveyId","findAll","where","sondage_id","questions","forEach","question","id","console","log","length","answerSondage_simulation","user","date","fake_answer","remplissage_id","answered_questions","answered_commentaires","question_id","answer","answerSondage","answerUserListSondage_simulation","users","addJourSondage","answerAll","findOne","firstDay","addAdmin","pseudo","admin","createSondage","update","current","day","numberAddeduser","Alldays","compteur","count","sum"],"mappings":"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","sourcesContent":["const Models = require(\"./index\");\nconst randInt = require('../custom_module/randInt');\nconst id_generator = require('../custom_module/id_generator');\nconst clearTables = require('./setup');\n\nconst { \n  Sondage, User, Reponse, Question, Remplissage, Admin, JourSondage,\n} = Models;\n\nconst simulationTime = 35;\nconst simulationDay = new Date();\nsimulationDay.setDate(simulationDay.getDate() - simulationTime);\n\nconst fakeSurvey = {\n  name: 'simulation_survey',\n  thematiqueList: [\n    {\n      name: 'simulation_thematique 1',\n      questionList: [\n        {\n          text: 'th1 question1',\n          keyWord: 'q1',\n        },\n        {\n          text: 'th1 question2',\n          keyWord: 'q2',\n        },\n        {\n          text: 'th1 question3',\n          keyWord: 'q3',\n        },\n      ],\n    },\n    {\n      name: 'simulation_thematique 2',\n      questionList: [\n        {\n          text: 'th2 question1',\n          keyWord: 'q1',\n        },\n        {\n          text: 'th2 question2',\n          keyWord: 'q2',\n        },\n      ],\n    },\n  ],\n};\n\nconst incrementDay = function () {\n  simulationDay.setDate(simulationDay.getDate() + 1);\n};\n\nconst addManyUsers = function (userNumber) {\n  return new Promise(function (resolve) {\n    const promiseArray = [];\n    for (let i = 0; i < userNumber; i++) {\n      promiseArray.push(User.addUser('simulation_user', 'simulation_user', 'simulation_user'));\n    }\n    Promise.all(promiseArray).then(resolve);\n  });\n};\n\nlet fakeSurvey_id = null;\nconst questionIdList = [];\n\nconst getQuestionIdList = function (fakeSurveyId) {\n  fakeSurvey_id = fakeSurveyId;\n  return new Promise(function (resolve) {\n    Question.findAll({ where: { sondage_id: fakeSurveyId } }).then((questions) => {\n      questions.forEach((question) => {\n        questionIdList.push(question.id);\n      });\n      console.log(\"nombre de question dans la base de donnÃ©e:\", questionIdList.length, \"  \", questions.length);\n      resolve();\n    });\n  });\n};\n\nconst answerSondage_simulation = function (user, date) {\n  return new Promise(function (resolve) {\n    const fake_answer = {\n      remplissage_id: id_generator(),\n      sondage_id: fakeSurvey_id,\n      answered_questions: [],\n      answered_commentaires: [],\n    };\n    questionIdList.forEach((question_id) => {\n      fake_answer.answered_questions.push({\n        question_id: question_id,\n        answer: randInt(-1, 2),\n      });\n    });\n    user.answerSondage(fake_answer, date).then(() => {\n      resolve();\n    });\n  });\n};\n\nconst answerUserListSondage_simulation = function (users, date) {\n  return new Promise(function (resolve) {\n    const promiseArray = [];\n    JourSondage.addJourSondage(fakeSurvey_id, simulationDay, users.length);\n    users.forEach((user) => {\n      promiseArray.push(answerSondage_simulation(user, date));\n    });\n    Promise.all(promiseArray).then(() => {\n      resolve();\n    });\n  });\n};\n\nconst answerAll = function () {\n  return new Promise(function (resolve) {\n    Sondage.findOne({ where: { name: fakeSurvey.name } }).then(() => {\n      User.findAll().then((users) => {\n        answerUserListSondage_simulation(users, simulationDay).then(() => {\n          resolve();\n        });\n      });\n    });\n  });\n};\n\nconst firstDay = function () {\n  return new Promise(function (resolve) {\n    Admin.addAdmin('Vince', 'Vince').then(() => {\n      addManyUsers(10).then(() => {\n        Admin.findOne({ where: { pseudo: 'Vince' } }).then((admin) => {\n          admin.createSondage(fakeSurvey).then((sondage_id) => {\n            Sondage.update({ current: true }, { where: { id: sondage_id } });\n            getQuestionIdList(sondage_id).then(() => {\n              answerAll().then(() => { \n                incrementDay();\n                resolve(); \n              }); \n            });\n          });\n        });\n      });\n    });\n  });\n};\n\nconst day = function (numberAddeduser) {\n  return new Promise(function (resolve) {\n    addManyUsers(numberAddeduser).then(() => {\n      answerAll().then(() => {\n        incrementDay();\n        resolve();\n      });\n    });\n  });\n};\n\nconst Alldays = function (compteur) {\n  if (compteur === 0) {\n    console.log(' -- fin --');\n    User.count().then((sum) => {\n      console.log(\"user :\", sum);\n    });\n    Remplissage.count().then((sum) => {\n      console.log(\"remplissage :\", sum);\n    });\n    Reponse.count().then((sum) => {\n      console.log(\"reponses :\", sum);\n    });\n  } else {\n    compteur--;\n    console.log(compteur);\n    if (compteur <= 15) {\n      day(1).then(() => {\n        Alldays(compteur);\n      });\n    } else {\n      day(2).then(() => {\n        Alldays(compteur);\n      });\n    }\n  }\n};\n\nclearTables().then(() => {\n  console.log(\"\");\n  console.log(\"------------------------------------------\");\n  console.log(\"\");\n  firstDay().then(() => {\n    Alldays(simulationTime);\n  });\n});\n"],"file":"simulation.js"}