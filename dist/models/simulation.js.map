{"version":3,"sources":["../../models/simulation.js"],"names":["Models","require","randInt","id_generator","clearTables","Sondage","User","Reponse","Question","Remplissage","Admin","JourSondage","simulationTime","simulationDay","Date","setDate","getDate","rand","max","Math","floor","random","randRep","date","diff","round","now","i","fakeSurvey","name","thematiqueList","questionList","text","keyWord","incrementDay","addManyUsers","userNumber","Promise","resolve","promiseArray","push","addUser","all","then","fakeSurvey_id","questionIdList","getQuestionIdList","fakeSurveyId","findAll","where","sondage_id","questions","forEach","question","id","console","log","length","answerSondage_simulation","user","fake_answer","remplissage_id","answered_questions","answered_commentaires","question_id","answer","answerSondage","answerUserListSondage_simulation","users","addJourSondage","answerAll","findOne","firstDay","addAdmin","pseudo","admin","createSondage","update","current","day","numberAddeduser","Alldays","compteur","count","sum"],"mappings":"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","sourcesContent":["const Models = require(\"./index\");\nconst randInt = require('../custom_module/randInt');\nconst id_generator = require('../custom_module/id_generator');\nconst clearTables = require('./setup');\n\nconst { \n  Sondage, User, Reponse, Question, Remplissage, Admin, JourSondage,\n} = Models;\n\nconst simulationTime = 35;\nconst simulationDay = new Date();\nsimulationDay.setDate(simulationDay.getDate() - simulationTime);\n\nconst rand = function (max) {\n  return Math.floor(Math.random() * Math.floor(max));\n};\n\nconst randRep = function (date) {\n  const diff = simulationTime - Math.round((Date.now() - date) / (1000 * 60 * 60 * 24));\n  const i = rand(44) + rand(diff);\n  if (i >= 0 && i <= 14) {\n    return (-1);\n  } if (i >= 15 && i <= 29) {\n    return (0);\n  } if (i >= 29) {\n    return (1);\n  } \n};\n\nconst fakeSurvey = {\n  name: 'Condition de travail',\n  thematiqueList: [\n    {\n      name: 'Cafétaria',\n      questionList: [\n        {\n          text: 'Le repas était-il convenable?',\n          keyWord: 'Qualité',\n        },\n        {\n          text: \"Comment était l'attente?\",\n          keyWord: 'Attente',\n        },\n        {\n          text: 'Etait-ce trop bryuant?',\n          keyWord: 'Bruit',\n        },\n      ],\n    },\n    {\n      name: 'Bureau',\n      questionList: [\n        {\n          text: \"Avez vous été productif aujourd'hui?\",\n          keyWord: 'Productivité',\n        },\n        {\n          text: 'Comment était la température?',\n          keyWord: 'Température',\n        },\n        {\n          text: 'Etait-ce trop bryuant?',\n          keyWord: 'Bruit',\n        },\n        {\n          text: 'Votre bureau était il sale?',\n          keyWord: 'Propreté',\n        },\n      ],\n    },\n  ],\n};\n\nconst incrementDay = function () {\n  simulationDay.setDate(simulationDay.getDate() + 1);\n};\n\nconst addManyUsers = function (userNumber) {\n  return new Promise(function (resolve) {\n    if (userNumber > 0) {\n      const promiseArray = [];\n      for (let i = 0; i < userNumber; i++) {\n        promiseArray.push(User.addUser('Goulven suce des gros chibre', ' et il a une patite bite', 'goulven.molaret@supekec.fr'));\n      }\n      Promise.all(promiseArray).then(resolve);\n    } else {\n      resolve();\n    }\n  });\n};\n\nlet fakeSurvey_id = null;\nconst questionIdList = [];\n\nconst getQuestionIdList = function (fakeSurveyId) {\n  fakeSurvey_id = fakeSurveyId;\n  return new Promise(function (resolve) {\n    Question.findAll({ where: { sondage_id: fakeSurveyId } }).then((questions) => {\n      questions.forEach((question) => {\n        questionIdList.push(question.id);\n      });\n      console.log(\"nombre de question dans la base de donnée:\", questionIdList.length, \"  \", questions.length);\n      resolve();\n    });\n  });\n};\n\nconst answerSondage_simulation = function (user, date) {\n  return new Promise(function (resolve) {\n    const fake_answer = {\n      remplissage_id: id_generator(),\n      sondage_id: fakeSurvey_id,\n      answered_questions: [],\n      answered_commentaires: [],\n    };\n    questionIdList.forEach((question_id) => {\n      fake_answer.answered_questions.push({\n        question_id: question_id,\n        answer: randRep(date),\n      });\n    });\n    user.answerSondage(fake_answer, date).then(() => {\n      resolve();\n    });\n  });\n};\n\nconst answerUserListSondage_simulation = function (users, date) {\n  return new Promise(function (resolve) {\n    const promiseArray = [];\n    JourSondage.addJourSondage(fakeSurvey_id, simulationDay, users.length);\n    users.forEach((user) => {\n      if (rand(3) !== 0) {\n        promiseArray.push(answerSondage_simulation(user, date));\n      }\n    });\n    Promise.all(promiseArray).then(() => {\n      resolve();\n    });\n  });\n};\n\nconst answerAll = function () {\n  return new Promise(function (resolve) {\n    Sondage.findOne({ where: { name: fakeSurvey.name } }).then(() => {\n      User.findAll().then((users) => {\n        answerUserListSondage_simulation(users, simulationDay).then(() => {\n          resolve();\n        });\n      });\n    });\n  });\n};\n\nconst firstDay = function () {\n  return new Promise(function (resolve) {\n    Admin.addAdmin('Vince', 'Vince').then(() => {\n      addManyUsers(10).then(() => {\n        Admin.findOne({ where: { pseudo: 'Vince' } }).then((admin) => {\n          admin.createSondage(fakeSurvey).then((sondage_id) => {\n            Sondage.update({ current: true }, { where: { id: sondage_id } });\n            getQuestionIdList(sondage_id).then(() => {\n              answerAll().then(() => { \n                incrementDay();\n                resolve(); \n              }); \n            });\n          });\n        });\n      });\n    });\n  });\n};\n\nconst day = function (numberAddeduser) {\n  return new Promise(function (resolve) {\n    addManyUsers(numberAddeduser).then(() => {\n      answerAll().then(() => {\n        incrementDay();\n        resolve();\n      });\n    });\n  });\n};\n\nconst Alldays = function (compteur) {\n  if (compteur === 0) {\n    console.log(' -- fin --');\n    User.count().then((sum) => {\n      console.log(\"user :\", sum);\n    });\n    Remplissage.count().then((sum) => {\n      console.log(\"remplissage :\", sum);\n    });\n    Reponse.count().then((sum) => {\n      console.log(\"reponses :\", sum);\n    });\n  } else {\n    compteur--;\n    console.log(compteur);\n    if (compteur <= 15) {\n      day(rand(2)).then(() => {\n        Alldays(compteur);\n      });\n    } else {\n      day(rand(5)).then(() => {\n        Alldays(compteur);\n      });\n    }\n  }\n};\n\nclearTables().then(() => {\n  console.log(\"\");\n  console.log(\"------------------------------------------\");\n  console.log(\"\");\n  firstDay().then(() => {\n    Alldays(simulationTime);\n  });\n});\n"],"file":"simulation.js"}